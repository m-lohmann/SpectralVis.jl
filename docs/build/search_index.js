var documenterSearchIndex = {"docs":
[{"location":"references.html#References","page":"References","title":"References","text":"","category":"section"},{"location":"references.html#Süsstrunk-cone-response-matrix","page":"References","title":"Süsstrunk cone response matrix","text":"","category":"section"},{"location":"references.html","page":"References","title":"References","text":"Sabine Süsstrunk. Computing Chromatic Adaptation PhD thesis, 2005, page 104.","category":"page"},{"location":"references.html","page":"References","title":"References","text":"Sharpened linear cone response matrix optimized for white-point independence, gamut coverage, and hue constancy. Delivers better results than :cat02 in most cases. Added for experimental purposes.","category":"page"},{"location":"references.html#Vantablack-hemispherical-reflectance-spectrum-from-264.6-to-16310.0-nm","page":"References","title":"Vantablack® hemispherical reflectance spectrum from 264.6 to 16310.0 nm","text":"","category":"section"},{"location":"references.html","page":"References","title":"References","text":"Surrey Nano Systems. Vantablack® VBx 2 - SUPER-BLACK SPRAY APPLIED VISIBLE SPECTRUM COATING - Data Sheet","category":"page"},{"location":"references.html","page":"References","title":"References","text":"Surrey Nano Systems. Vantablack® - Ultra Black Absorptive Coating","category":"page"},{"location":"references.html","page":"References","title":"References","text":"Surrey Nano Systems. Vantablack® S-VIS/S-IR Optical Properties & Space Qualification Test Data","category":"page"},{"location":"references.html#GretagMacbeth-color-charts","page":"References","title":"GretagMacbeth color charts","text":"","category":"section"},{"location":"references.html#MacBeth-color-chart-1","page":"References","title":"MacBeth color chart 1","text":"","category":"section"},{"location":"references.html","page":"References","title":"References","text":"BabelColor Color Checker spectra.","category":"page"},{"location":"references.html","page":"References","title":"References","text":"Average of 20 color checker measurements.","category":"page"},{"location":"references.html#MacBeth-color-chart-2","page":"References","title":"MacBeth color chart 2","text":"","category":"section"},{"location":"references.html","page":"References","title":"References","text":"Measurement info:","category":"page"},{"location":"references.html","page":"References","title":"References","text":"t = r, n = 101, o = 380, s = 4\r\nReflectance (IE, signal DIVIDED by reference)\r\n\nMon Oct 24 19:32:41 1994 |  Reflectance | Macbeth - Dark Skin\r\nMon Oct 24 19:32:41 1994 |  Reflectance | Macbeth - Light Skin\r\nMon Oct 24 19:32:41 1994 |  Reflectance | Macbeth - Blue Sky\r\nMon Oct 24 19:32:41 1994 |  Reflectance | Macbeth - Foilage\r\nMon Oct 24 19:32:41 1994 |  Reflectance | Macbeth - Blue Flower\r\nMon Oct 24 19:32:41 1994 |  Reflectance | Macbeth - Bluish Green\r\nMon Oct 24 19:32:41 1994 |  Reflectance | Macbeth - Orange\r\nMon Oct 24 19:32:41 1994 |  Reflectance | Macbeth - Purplish Blu\r\nMon Oct 24 19:32:41 1994 |  Reflectance | Macbeth - Moderate Red\r\nMon Oct 24 19:32:41 1994 |  Reflectance | Macbeth - Purple\r\nMon Oct 24 19:32:41 1994 |  Reflectance | Macbeth - Yellow Green\r\nMon Oct 24 19:32:41 1994 |  Reflectance | Macbeth - Orange Yello\r\nMon Oct 24 19:32:41 1994 |  Reflectance | Macbeth - Blue\r\nMon Oct 24 19:32:41 1994 |  Reflectance | Macbeth - Green\r\nMon Oct 24 19:32:41 1994 |  Reflectance | Macbeth - Red\r\nMon Oct 24 19:32:41 1994 |  Reflectance | Macbeth - Yellow\r\nMon Oct 24 19:32:41 1994 |  Reflectance | Macbeth - Magenta\r\nMon Oct 24 19:32:41 1994 |  Reflectance | Macbeth - Cyan\r\nMon Oct 24 19:32:41 1994 |  Reflectance | Macbeth - White\r\nMon Oct 24 19:32:41 1994 |  Reflectance | Macbeth - Neutral-8\r\nMon Oct 24 19:32:41 1994 |  Reflectance | Macbeth - Neutral-6.5\r\nMon Oct 24 19:32:41 1994 |  Reflectance | Macbeth - Neutral-5\r\nMon Oct 24 19:32:41 1994 |  Reflectance | Macbeth - Neutral-3.5\r\nMon Oct 24 19:32:41 1994 |  Reflectance | Macbeth - Black","category":"page"},{"location":"references.html#MacBeth-color-chart-3","page":"References","title":"MacBeth color chart 3","text":"","category":"section"},{"location":"references.html","page":"References","title":"References","text":"Data from from Noboru Ohta, Alan R. Robertson. “Colorimetry: Fundamentals and Applications”, (May 2006), DOI:10.1002/0470094745","category":"page"},{"location":"references.html#Munsell-spectra-(matt)","page":"References","title":"Munsell spectra (matt)","text":"","category":"section"},{"location":"references.html","page":"References","title":"References","text":"Munsell colors matt (spectrofotometer measured)","category":"page"},{"location":"references.html","page":"References","title":"References","text":"The reflectance spectra of 1269 matt Munsell color chips.\r\nMeasuring equipment: Perkin-Elmer lambda 9 UV/VIS/NIR spectrofotometer.\r\nWavelength interval: 380 nm - 800 nm.\r\nWavelength resolution: 1 nm.\r\n\nMeasurer: Jouni Hiltunen","category":"page"},{"location":"references.html","page":"References","title":"References","text":"Further information: Jouni.Hiltunen@joensuu.fi and haanpalo@lut.fi","category":"page"},{"location":"references.html","page":"References","title":"References","text":"Munsell Book of Color - Matte Finish Collection (Munsell Color, Baltimore, Md., 1976).","category":"page"},{"location":"references.html#CIE-Daylight-Series-generator","page":"References","title":"CIE Daylight Series generator","text":"","category":"section"},{"location":"references.html","page":"References","title":"References","text":"D. R. W. Hunt. “Measuring Colour”, third edition, Appendix 5.2, CIE Standard Illuminants.","category":"page"},{"location":"references.html#CIE-Standard-Illuminant-A","page":"References","title":"CIE Standard Illuminant A","text":"","category":"section"},{"location":"references.html","page":"References","title":"References","text":"Dr. H. W. G. Hunt, “Measuring Colour”, third edition. Appendix 5, “Relative spectral power distributions of illuminants”","category":"page"},{"location":"references.html","page":"References","title":"References","text":"The relative spectral power distribution is equal to a Planckian spectrum at T ≊ 2856 K, which is also its CCT.","category":"page"},{"location":"references.html","page":"References","title":"References","text":"CCT according to the International Practical Temperature Scale from 1968.","category":"page"},{"location":"references.html#CIE-Standard-Illuminants-B-and-C","page":"References","title":"CIE Standard Illuminants B and C","text":"","category":"section"},{"location":"references.html","page":"References","title":"References","text":"R. G. W. Hunt. “Measuring Colour”, third edition. Chapter 4.1:“Standard Illuminants B and C”","category":"page"},{"location":"references.html","page":"References","title":"References","text":"How the CIE Standard Illuminant C is produced:","category":"page"},{"location":"references.html","page":"References","title":"References","text":"Standard Source A is combined with a filter made of two 1 cm thick layers, containing two solutions, C₁ and C₂. The solutions are contained in a double cell that is made of a colorless optical glass.","category":"page"},{"location":"references.html","page":"References","title":"References","text":"Solution C₁:","category":"page"},{"location":"references.html","page":"References","title":"References","text":"3.412 g copper sulphate (CuSO_45H_2O)\n3.412 g mannite [C_6H_8(OH)_6]\n30.0 ml pyridine (C_5H_5N)\n1000.0 ml distilled water","category":"page"},{"location":"references.html","page":"References","title":"References","text":"Solution C₂:","category":"page"},{"location":"references.html","page":"References","title":"References","text":"30.58 g cobalt ammonium sulphate [CoSO_4(NH_4)_2SO_46H_2O]\n22.52 g copper sulphate (CuSO_45H_2O)\n10.0 ml sulphuric acid (density 1.835 g/ml)\n1000.0 ml distilled water","category":"page"},{"location":"references.html#F-Series-spectra","page":"References","title":"F Series spectra","text":"","category":"section"},{"location":"references.html","page":"References","title":"References","text":"D. R. W. Hunt. “Measuring Colour”, Third edition, Appendix 5.3, “Spectral power distributions of representative fluorescent lamps”.","category":"page"},{"location":"references.html#Gas-Discharge-Lamp-spectra","page":"References","title":"Gas Discharge Lamp spectra","text":"","category":"section"},{"location":"references.html","page":"References","title":"References","text":"D. R. W. Hunt. “Measuring Colour”, Third edition. Data from: Appendix 5.6, “Gas discharge lamps”. Relative SPDs, relative to HPS at 560 nm.","category":"page"},{"location":"references.html#LED-Spectrum-generator","page":"References","title":"LED Spectrum generator","text":"","category":"section"},{"location":"references.html","page":"References","title":"References","text":"Yoshi Ohno (2004). Simulation Analysis of White LED Spectra and Color Rendering, Proceedings for CIE Expert Symposium on LED Light Sources, Tokyo, JA (Accessed May 27, 2021)","category":"page"},{"location":"references.html#Agfa-IT8.7-spectra","page":"References","title":"Agfa IT8.7 spectra","text":"","category":"section"},{"location":"references.html","page":"References","title":"References","text":"Agfa ColorReference according to the IT8.7 standard","category":"page"},{"location":"references.html","page":"References","title":"References","text":"Measurer and further information: ela@ee.oulu.fi (University of Oulu, Electrical Eng.Dept)","category":"page"},{"location":"references.html","page":"References","title":"References","text":"AgfaFotoreference, Trademark of Agfa-Gevaert A.G., Septestraat 27 2640 Mortsel - Belgium,1992.","category":"page"},{"location":"references.html#Color-Matching-Functions","page":"References","title":"Color Matching Functions","text":"","category":"section"},{"location":"references.html","page":"References","title":"References","text":"University College London Institute of Ophtalmology. Color and Vision Research Laboratory","category":"page"},{"location":"references.html","page":"References","title":"References","text":"CIE. (1926). Commission Internationale de l’Éclairage Proceedings, 1924. Cambridge: Cambridge University Press.","category":"page"},{"location":"references.html","page":"References","title":"References","text":"CIE. (1932). Commission Internationale de l’Éclairage Proceedings, 1931. Cambridge: Cambridge University Press.","category":"page"},{"location":"references.html","page":"References","title":"References","text":"CIE Proceedings (1964) Vienna Session, 1963, Vol. B, pp. 209-220 (Committee Report E-1.4.1), Bureau Central de la CIE, Paris","category":"page"},{"location":"references.html","page":"References","title":"References","text":"Guild, J. (1931). The colorimetric properties of the spectrum. Philosophical Transactions of the Royal Society of London, A230, 149-187.","category":"page"},{"location":"references.html","page":"References","title":"References","text":"Speranskaya, N. I. (1959). Determination of spectrum color co-ordinates for twenty-seven normal observers. Optics and Spectroscopy, 7, 424-428.","category":"page"},{"location":"references.html","page":"References","title":"References","text":"Stiles, W. S. & Burch, J. M. (1955). Interim report to the Commission Internationale de l’Éclairage Zurich, 1955, on the National Physical Laboratory's investigation of colour-matching. Optica Acta, 2, 168-181.","category":"page"},{"location":"references.html","page":"References","title":"References","text":"Stiles, W. S., & Burch, J. M. (1959). NPL colour-matching investigation: Final report. Optica Acta, 6, 1-26.","category":"page"},{"location":"references.html","page":"References","title":"References","text":"Stockman, A., Sharpe, L. T., & Fach, C. C. (1999). The spectral sensitivity of the human short-wavelength cones. Vision Research, 39, 2901-2927.","category":"page"},{"location":"references.html","page":"References","title":"References","text":"Stockman, A., & Sharpe, L. T. (2000). Spectral sensitivities of the middle- and long-wavelength sensitive cones derived from measurements in observers of known genotype. Vision Research, 40, 1711-1737.","category":"page"},{"location":"references.html","page":"References","title":"References","text":"Wright, W. D. (1928). A re-determination of the trichromatic coefficients of the spectral colours. Transactions of the Optical Society, 30, 141-164.","category":"page"},{"location":"references.html","page":"References","title":"References","text":"Wyszecki, G., & Stiles, W. S. (1982). Color Science: concepts and methods, quantitative data and formulae. (2nd ed.). New York: Wiley.","category":"page"},{"location":"references.html#Further-sources","page":"References","title":"Further sources","text":"","category":"section"},{"location":"references.html","page":"References","title":"References","text":"D.L. MacAdam. \"Color Measurement\", chapter 5.4 \"Truncations\".","category":"page"},{"location":"spectraloperators.html#Spectral-Operators","page":"Spectral Operators","title":"Spectral Operators","text":"","category":"section"},{"location":"spectraloperators.html","page":"Spectral Operators","title":"Spectral Operators","text":"Operators for spectral computation. Spectral computations follow a physically plausible chain of operations.","category":"page"},{"location":"spectraloperators.html#*-Operator","page":"Spectral Operators","title":"* Operator","text":"","category":"section"},{"location":"spectraloperators.html#Operator","page":"Spectral Operators","title":"+ Operator","text":"","category":"section"},{"location":"spectraloperators.html#Operator-2","page":"Spectral Operators","title":"× Operator","text":"","category":"section"},{"location":"about.html#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"about.html","page":"Introduction","title":"Introduction","text":"The package SpectralVis provides a comprehensive set of tools and data for spectral based calculations:","category":"page"},{"location":"about.html#Large-real-life-spectral-datasets","page":"Introduction","title":"Large real life spectral datasets","text":"","category":"section"},{"location":"about.html","page":"Introduction","title":"Introduction","text":"3 sets of MacBeth color checker spectra\nMars Exploration Rover (MER) related datasets, like\nspectrum of the Martian sky, as measured by the Opportunity rover\nall MER PanCam filter spectra (IR-Vis)\nall MER calibration target (Caltarget) spectra (IR-Vis)\na complete spectral AgfaIt872 dataset\ncomplete Munsell matte spectral dataset\na complete spectral set of the Kodak Wratten filters\nseveral measured mineral spectra\nVantablack® reflectance spectrum (IR-Vis)","category":"page"},{"location":"about.html#Distinct-spectral-types","page":"Introduction","title":"Distinct spectral types","text":"","category":"section"},{"location":"about.html","page":"Introduction","title":"Introduction","text":"illuminant spectra (::LSpec)\nreflectance spectra (::RSpec)\ntransmittance spectra (::TSpec)\nmultispectral types\na wide variety of CIE CMFs (::CMatch)\nand the cone fundamentals that come with these (::ConeFund)\nconversion methods","category":"page"},{"location":"about.html#Spectral-environments-for-the-automation-of-adapting-spectra-to-the-same-spectral-configurations","page":"Introduction","title":"Spectral environments for the automation of adapting spectra to the same spectral configurations","text":"","category":"section"},{"location":"about.html#Chromatic-adaptation-transforms-(CATs)/cone-response-matrices","page":"Introduction","title":"Chromatic adaptation transforms (CATs)/cone response matrices","text":"","category":"section"},{"location":"about.html","page":"Introduction","title":"Introduction","text":"XYZ scaling\nvonKries\nlinearized Bradford transform\nSharp transform\nFairchild transform\nCAT97s\nCAT02\nHunter-Pointer-Estevez transform\nSüsstrunk transform\nIngling-Tsou suprathreshold trasforma (color opponent space)","category":"page"},{"location":"about.html#Spectral-generators","page":"Introduction","title":"Spectral generators","text":"","category":"section"},{"location":"about.html","page":"Introduction","title":"Introduction","text":"block spectra\nblackbody generator\nCIE Daylight series generator\nall 12 CIE F-series illuminant spectra\nCIE A, B, C illuminant spectra\nLED illuminant generator\n7 Gas discharge illuminant spectra\nLow pressure sodium\nHigh pressure sodium\nHigh pressure mercury\nHigh pressure mercury with red-emitting phosphor coating\nHigh pressure mercury with red-emitting phopsphor coating and tungsten filament ballast\nHigh pressure mercury with metal halides\nXenon\nsinusoidal SPD generator","category":"page"},{"location":"about.html#Jozef-Cohen’s-matrix-R-methods","page":"Introduction","title":"Jozef Cohen’s matrix-R methods","text":"","category":"section"},{"location":"about.html","page":"Introduction","title":"Introduction","text":"fundamental metamers\nmetameric blacks\nmetamer generation\na comprehensive set of methods for spectral interactions of all types mentioned above","category":"page"},{"location":"about.html#A-large-collection-of-color-matching-ellipse-datasets","page":"Introduction","title":"A large collection of color-matching ellipse datasets","text":"","category":"section"},{"location":"about.html","page":"Introduction","title":"Introduction","text":"PGN: P. G. Nutting Jr. (the most famous ellispe dataset)\nDLM: David L. MacAdam\nWRB: W. R. J. Brown (after Brown & MacAdam)\nGW: 42 years old observer\nAR: 27 years old observer\nGF: 32 years old observer\n12B: Average ellipses of W. R. J. Brown’s group of 12 observers\nFMC: predicted ellipses by the Friele-MacAdam-Chickering formula optimized for best fit with PGN ellipses.","category":"page"},{"location":"about.html#State-of-the-art-spectral-simulation-of-color-deficiencies,-including-genetically-caused-shifts-of-cone-response-curves","page":"Introduction","title":"State of the art spectral simulation of color deficiencies, including genetically caused shifts of cone response curves","text":"","category":"section"},{"location":"about.html","page":"Introduction","title":"Introduction","text":"protanopia\ndeuteranopia\ntritanopia\nprotanomaly\ndeuteranomaly\ntritanomaly","category":"page"},{"location":"about.html#Gamuts","page":"Introduction","title":"Gamuts","text":"","category":"section"},{"location":"about.html","page":"Introduction","title":"Introduction","text":"gamut visualization methods","category":"page"},{"location":"spectraltypes.html#Spectral-Type-Tree","page":"Spectral Types","title":"Spectral Type Tree","text":"","category":"section"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"Spectrum ═╦═ Multispectral ═╦═ CMatch ═══╦═  CIE31\r\n          ║                 ║            ╠═  CIE31_J\r\n          ║                 ║            ╠═  CIE31_JV\r\n          ║                 ║            ╠═  CIE64\r\n          ║                 ║            ╠═  CIE12_2\r\n          ║                 ║            ╚═  CIE12_10\r\n          ║                 ║\r\n          ║                 ╠═ ConeFund ═╦═  LMS31\r\n          ║                 ║            ╠═  LMS64\r\n          ║                 ║            ╠═  LMS06_2\r\n          ║                 ║            ╚═  LMS06_10\r\n          ║                 ║\r\n          ║                 ╚═ COpp ════════ VYBRG\r\n          ║\r\n          ╠═ LSpec\r\n          ╠═ RSpec\r\n          ╚═ TSpec","category":"page"},{"location":"spectraltypes.html#Multispectral","page":"Spectral Types","title":"Multispectral","text":"","category":"section"},{"location":"spectraltypes.html#CMatch","page":"Spectral Types","title":"CMatch","text":"","category":"section"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"CIE standard color matching function types.","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"CIE31","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"CIE1931 2° observer.","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"CIE31","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"CIE31_J","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"CIE1931 observer with corrections by Judd.","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"CIE31_J","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"CIE31_JV","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"CIE1931 observer with corrections by Judd and Vos.","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"CIE31_JV","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"CIE64","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"CIE1964 10° observer.","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"CIE64","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"CIE12_2","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"CIE2012 2° observer (current CIE 2° standard observer).","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"CIE12_2","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"CIE12_10","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"CIE2012 10° observer (current CIE 10° standard observer).","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"CIE12_10","category":"page"},{"location":"spectraltypes.html#ConeFund","page":"Spectral Types","title":"ConeFund","text":"","category":"section"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"Cone fundamental function types.","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"LMS31","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"LMS function associated with the CIE1931 CMF.","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"LMS31","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"LMS64","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"LMS function associated with the CIE1964 CMF. S cone function extended by the function 10^104021  λ - 2127185 in the range between ? and ?, according to  ?.","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"LMS64","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"LMS06_2","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"LMS function associated with the new CIE2012 2° standard observer.","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"LMS06_2","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"LMS06_10","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"LMS function associated with the new CIE2012 10° standard observer.","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"LMS06_10","category":"page"},{"location":"spectraltypes.html#COpp","page":"Spectral Types","title":"COpp","text":"","category":"section"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"Color opponent spaces.","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"VYBRG","category":"page"},{"location":"spectraltypes.html","page":"Spectral Types","title":"Spectral Types","text":"Ingling and Tsou color opponent space.","category":"page"},{"location":"spectraltypes.html#LSpec","page":"Spectral Types","title":"LSpec","text":"","category":"section"},{"location":"spectraltypes.html#RSpec","page":"Spectral Types","title":"RSpec","text":"","category":"section"},{"location":"spectraltypes.html#TSpec","page":"Spectral Types","title":"TSpec","text":"","category":"section"},{"location":"conefundamentals.html#Cone-Fundamental-Functions","page":"Cone Fundamental Functions","title":"Cone Fundamental Functions","text":"","category":"section"},{"location":"conefundamentals.html","page":"Cone Fundamental Functions","title":"Cone Fundamental Functions","text":"This package offers a variety of cone fundamental functions, which give the l, m, and s cone response functions associated with the corresponding color matching functions.","category":"page"},{"location":"conefundamentals.html","page":"Cone Fundamental Functions","title":"Cone Fundamental Functions","text":"Cone fundamentals are expressed as concrete ConeFund subtypes.","category":"page"},{"location":"conefundamentals.html","page":"Cone Fundamental Functions","title":"Cone Fundamental Functions","text":"The available ConeFund types are:","category":"page"},{"location":"conefundamentals.html","page":"Cone Fundamental Functions","title":"Cone Fundamental Functions","text":"LMS31","category":"page"},{"location":"conefundamentals.html","page":"Cone Fundamental Functions","title":"Cone Fundamental Functions","text":"Cone fundamental functions associated with the CIE31 color matching functions.","category":"page"},{"location":"conefundamentals.html","page":"Cone Fundamental Functions","title":"Cone Fundamental Functions","text":"LMS64","category":"page"},{"location":"conefundamentals.html","page":"Cone Fundamental Functions","title":"Cone Fundamental Functions","text":"Cone fundamental functions associated with the CIE64 color matching functions.","category":"page"},{"location":"conefundamentals.html","page":"Cone Fundamental Functions","title":"Cone Fundamental Functions","text":"LMS06_2","category":"page"},{"location":"conefundamentals.html","page":"Cone Fundamental Functions","title":"Cone Fundamental Functions","text":"Cone fundamental functions associated with the CIE12_2 color matching functions.","category":"page"},{"location":"conefundamentals.html","page":"Cone Fundamental Functions","title":"Cone Fundamental Functions","text":"LMS06_10","category":"page"},{"location":"conefundamentals.html","page":"Cone Fundamental Functions","title":"Cone Fundamental Functions","text":"Cone fundamental functions associated with the CIE12_10 color matching functions.","category":"page"},{"location":"advancedfunctions.html#Advanced-Functions","page":"Advanced Functions","title":"Advanced Functions","text":"","category":"section"},{"location":"advancedfunctions.html#Color-match-for-CIE-Standard-Observer","page":"Advanced Functions","title":"Color match for CIE Standard Observer","text":"","category":"section"},{"location":"advancedfunctions.html","page":"Advanced Functions","title":"Advanced Functions","text":"The colormatch() function returns an XYZ color corresponding to a wavelength specified in nanometers.","category":"page"},{"location":"advancedfunctions.html","page":"Advanced Functions","title":"Advanced Functions","text":"colormatch(wavelen::Real)","category":"page"},{"location":"advancedfunctions.html","page":"Advanced Functions","title":"Advanced Functions","text":"The CIE defines a standard observer, defining a typical frequency response curve for each of the three human eye cones.","category":"page"},{"location":"advancedfunctions.html","page":"Advanced Functions","title":"Advanced Functions","text":"For instance, conversion from optical wavelength to RGB can be achieved with:","category":"page"},{"location":"advancedfunctions.html","page":"Advanced Functions","title":"Advanced Functions","text":"using Colors # hide\r\nshowable(::MIME\"text/plain\", ::AbstractVector{C}) where {C<:Colorant} = false # hide\r\nRGB.(colormatch.(350:10:750))","category":"page"},{"location":"advancedfunctions.html","page":"Advanced Functions","title":"Advanced Functions","text":"colormatch","category":"page"},{"location":"advancedfunctions.html#Chromatic-Adaptation-(white-balance)","page":"Advanced Functions","title":"Chromatic Adaptation (white balance)","text":"","category":"section"},{"location":"advancedfunctions.html","page":"Advanced Functions","title":"Advanced Functions","text":"The whitebalance() function converts a color according to a reference white point.","category":"page"},{"location":"advancedfunctions.html","page":"Advanced Functions","title":"Advanced Functions","text":"whitebalance{T <: Color}(c::T, src_white::Color, ref_white::Color)","category":"page"},{"location":"advancedfunctions.html","page":"Advanced Functions","title":"Advanced Functions","text":"Convert a color c viewed under conditions with a given source whitepoint src_whitepoint to appear the same under different conditions specified by a reference whitepoint ref_white.","category":"page"},{"location":"advancedfunctions.html","page":"Advanced Functions","title":"Advanced Functions","text":"whitebalance","category":"page"},{"location":"advancedfunctions.html#color_deficiency","page":"Advanced Functions","title":"Simulation of color deficiency (\"color blindness\")","text":"","category":"section"},{"location":"advancedfunctions.html","page":"Advanced Functions","title":"Advanced Functions","text":"Three functions are provided that map colors to a reduced gamut to simulate different types of dichromacy, the loss of one of the three types of human photopigments.","category":"page"},{"location":"advancedfunctions.html","page":"Advanced Functions","title":"Advanced Functions","text":"Protanopia, deuteranopia, and tritanopia are the loss of long, middle, and short wavelength photopigment, respectively.","category":"page"},{"location":"advancedfunctions.html","page":"Advanced Functions","title":"Advanced Functions","text":"These functions take a color and return a new, altered color in the same colorspace.","category":"page"},{"location":"advancedfunctions.html","page":"Advanced Functions","title":"Advanced Functions","text":"protanopic(c::Color, p::Float64)\r\ndeuteranopic(c::Color, p::Float64)\r\ntritanopic(c::Color, p::Float64)","category":"page"},{"location":"advancedfunctions.html","page":"Advanced Functions","title":"Advanced Functions","text":"Also provided are versions of these functions with an extra parameter p in [0, 1], giving the degree of photopigment loss, where 1.0 is a complete loss, and 0.0 is no loss at all. The partial loss simulates the anomalous trichromacy, i.e. protanomaly, deuteranomaly and tritanomaly.","category":"page"},{"location":"advancedfunctions.html","page":"Advanced Functions","title":"Advanced Functions","text":"using Colors #hide\r\nusing Main: SampleImages # hide\r\nSampleImages.BeadsImageSVG(\"Normal\") # hide","category":"page"},{"location":"advancedfunctions.html","page":"Advanced Functions","title":"Advanced Functions","text":"SampleImages.BeadsImageSVG(\"Protanomaly (p=0.7)\", filter=(c->protanopic(c, 0.7))) # hide","category":"page"},{"location":"advancedfunctions.html","page":"Advanced Functions","title":"Advanced Functions","text":"SampleImages.BeadsImageSVG(\"Deuteranomaly (p=0.7)\", filter=(c->deuteranopic(c, 0.7))) # hide","category":"page"},{"location":"advancedfunctions.html","page":"Advanced Functions","title":"Advanced Functions","text":"SampleImages.BeadsImageSVG(\"Tritanomaly (p=0.7)\", filter=(c->tritanopic(c, 0.7))) # hide","category":"page"},{"location":"advancedfunctions.html","page":"Advanced Functions","title":"Advanced Functions","text":"protanopic\r\ndeuteranopic\r\ntritanopic","category":"page"},{"location":"advancedfunctions.html#Most-saturated-color","page":"Advanced Functions","title":"Most saturated color","text":"","category":"section"},{"location":"advancedfunctions.html","page":"Advanced Functions","title":"Advanced Functions","text":"The MSC(h) function returns the most saturated color for a given hue h (defined in LCHuv space, i.e. in range [0, 360]). Optionally the lightness l can also be given, as MSC(h, l). The function calculates the color by finding the edge of the LCHuv space for a given angle (hue).","category":"page"},{"location":"advancedfunctions.html","page":"Advanced Functions","title":"Advanced Functions","text":"MSC","category":"page"},{"location":"spectralenvironment.html#Spectral-Environment","page":"Spectral Environment","title":"Spectral Environment","text":"","category":"section"},{"location":"spectralenvironment.html","page":"Spectral Environment","title":"Spectral Environment","text":"SpectralVis initializes a spectral environment which defines parameters that all spectral functions can access to guarantee compatibility of datasets and spectra.","category":"page"},{"location":"spectralenvironment.html#SPECENV","page":"Spectral Environment","title":"SPECENV","text":"","category":"section"},{"location":"spectralenvironment.html","page":"Spectral Environment","title":"Spectral Environment","text":"The struct SPECENV stores all relevant parameters for spectral calculations. It contains the following fields:","category":"page"},{"location":"spectralenvironment.html","page":"Spectral Environment","title":"Spectral Environment","text":"λmin: wavelength of the lower boundary in nm.","category":"page"},{"location":"spectralenvironment.html","page":"Spectral Environment","title":"Spectral Environment","text":"Δλ: stepwidth in nm.","category":"page"},{"location":"spectralenvironment.html","page":"Spectral Environment","title":"Spectral Environment","text":"λmax: wavelength of the upper boundary in nm.","category":"page"},{"location":"spectralenvironment.html","page":"Spectral Environment","title":"Spectral Environment","text":"cmf: color matching function.","category":"page"},{"location":"spectralenvironment.html","page":"Spectral Environment","title":"Spectral Environment","text":"ex: extrapolation mode.","category":"page"},{"location":"spectralenvironment.html#λmin,-Δλ,-λmax","page":"Spectral Environment","title":"λmin, Δλ, λmax","text":"","category":"section"},{"location":"spectralenvironment.html","page":"Spectral Environment","title":"Spectral Environment","text":"For obvious reasons, λmin, Δλ, and λmax ideally correspond with the parameters given by cmf.","category":"page"},{"location":"spectralenvironment.html#cmf","page":"Spectral Environment","title":"cmf","text":"","category":"section"},{"location":"spectralenvironment.html","page":"Spectral Environment","title":"Spectral Environment","text":"The field cmf defines which color matching function type is used for all spectral calculations where CMFs are relevant, for example in color deficiency simulations, determination of fundamental metamers, or color calculations.","category":"page"},{"location":"spectralenvironment.html#ex","page":"Spectral Environment","title":"ex","text":"","category":"section"},{"location":"spectralenvironment.html","page":"Spectral Environment","title":"Spectral Environment","text":"The field ex determines the mode used to extrapolate spectra beyond the boundaries of their defined range, if necessary.","category":"page"},{"location":"spectralenvironment.html","page":"Spectral Environment","title":"Spectral Environment","text":"The following extrapolation modes are available in SpectralVis:","category":"page"},{"location":"spectralenvironment.html#:none,-:zero","page":"Spectral Environment","title":":none, :zero","text":"","category":"section"},{"location":"spectralenvironment.html","page":"Spectral Environment","title":"Spectral Environment","text":"Spectral data outside the defined range are set to zero.","category":"page"},{"location":"spectralenvironment.html#:boundary","page":"Spectral Environment","title":":boundary","text":"","category":"section"},{"location":"spectralenvironment.html","page":"Spectral Environment","title":"Spectral Environment","text":"Spectral data outside the defined range are set to the values of the respective lower and upper boundaries.","category":"page"},{"location":"spectralenvironment.html#:linear","page":"Spectral Environment","title":":linear","text":"","category":"section"},{"location":"spectralenvironment.html","page":"Spectral Environment","title":"Spectral Environment","text":"Spectral data outside the defined range are linearly extrapolated.","category":"page"},{"location":"spectralenvironment.html#:parabolic","page":"Spectral Environment","title":":parabolic","text":"","category":"section"},{"location":"spectralenvironment.html","page":"Spectral Environment","title":"Spectral Environment","text":"Spectral data outside the defined range are extrapolated by parabolas.","category":"page"},{"location":"spectralenvironment.html#setting-up-a-spectral-environment-and-changing-SPECENV-fields","page":"Spectral Environment","title":"setting up a spectral environment and changing SPECENV fields","text":"","category":"section"},{"location":"spectralenvironment.html","page":"Spectral Environment","title":"Spectral Environment","text":"set_specenv(λmin = 390.0, Δλ = 1.0, λmax = 830.0, cmf = cmfunc(:cie12_10), ex = :linear)","category":"page"},{"location":"spectralenvironment.html","page":"Spectral Environment","title":"Spectral Environment","text":"set_specenv","category":"page"},{"location":"spectralenvironment.html#SpectralVis.set_specenv","page":"Spectral Environment","title":"SpectralVis.set_specenv","text":"set_specenv(λmin=390.0,Δλ=1.0,λmax=830.0,extrapolate= :zero)\n\nInitializes the spectral environment to standard values:\n\nλmin = 380.0 nm λmax = 830.0 nm Δλ   =   1.0 nm cmf  = cmfunc(:cie12_10) ex = :linear\n\n\n\n\n\n","category":"function"},{"location":"spectralenvironment.html","page":"Spectral Environment","title":"Spectral Environment","text":"set_extrap(extrapolation::Symbol)","category":"page"},{"location":"spectralenvironment.html","page":"Spectral Environment","title":"Spectral Environment","text":"set_extrap","category":"page"},{"location":"spectralenvironment.html#SpectralVis.set_extrap","page":"Spectral Environment","title":"SpectralVis.set_extrap","text":"set_extrap(env::SpecEnvironment,extrapolation::Symbol)\n\nSets the extrapolation mode of the environment env to one of the available extrapolation settings:\n\n:none or :zero: out of range values are zero.\n\n:constant: out of range values are set to λmin and λmax, respectively.\n\n:linear: out of range values are linearly extrapolated through the first/last two data points.\n\n:parabolic: out fo range values are extrapolated with a parabola through the first/last three datapoints. Recommended extrapolation method according to D.L. MacAdams in \"Color Measurement\", chapter 5.4 \"Truncations\".\n\n\n\n\n\nset_extrap(extrapolation::Symbol)\n\nSets the extrapolation mode of the environment env to one of the available extrapolation settings:\n\n:none or :zero: out of range values are zero.\n\n:constant: out of range values are set to λmin and λmax, respectively.\n\n:linear: out of range values are linearly extrapolated through the first/last two data points.\n\n:parabolic: out fo range values are extrapolated with a parabola through the first/last three datapoints. Recommended extrapolation method according to D.L. MacAdams in \"Color Measurement\", chapter 5.4 \"Truncations\".\n\n\n\n\n\n","category":"function"},{"location":"spectralenvironment.html","page":"Spectral Environment","title":"Spectral Environment","text":"set_limits(env::SpecEnvironment, λmin::Real,Δλ::Real,λmax::Real)","category":"page"},{"location":"spectralenvironment.html","page":"Spectral Environment","title":"Spectral Environment","text":"set_limits","category":"page"},{"location":"spectralenvironment.html#SpectralVis.set_limits","page":"Spectral Environment","title":"SpectralVis.set_limits","text":"set_limits(env::SpecEnvironment, λmin::Real,Δλ::Real,λmax::Real)\n\nsets the wavelength limits and resolution of the spectral environment\n\n\n\n\n\nset_limits(λmin::Real,Δλ::Real,λmax::Real)\n\nsets the wavelength limits and resolution of the spectral environment\n\n\n\n\n\n","category":"function"},{"location":"spectralenvironment.html","page":"Spectral Environment","title":"Spectral Environment","text":"set_colormatch(env::SpecEnvironment, colormatch::CMatch)","category":"page"},{"location":"spectralenvironment.html","page":"Spectral Environment","title":"Spectral Environment","text":"set_colormatch","category":"page"},{"location":"spectralenvironment.html#SpectralVis.set_colormatch","page":"Spectral Environment","title":"SpectralVis.set_colormatch","text":"set_colormatch(env::SpecEnvironment, colormatch::CMatch)\n\nSets the color matching function (CMF) used in a defined spectral environment.\n\nAvailable CMFs:\n\n:cie31, :cie31_j, :cie31_jv, :cie64, :cie12_2, :cie12_10, :lms06_2, :lms06_10\n\n\n\n\n\nset_colormatch(colormatch::CMatch)\n\nSets the color matching function (CMF) used in the spectral environment.\n\nAvailable CMFs:\n\n:cie31, :cie31_j, :cie31_jv, :cie64, :cie12_2, :cie12_10, :lms06_2, :lms06_10\n\n\n\n\n\n","category":"function"},{"location":"documentation.html#SpectralVis.jl-Documentation","page":"Documentation","title":"SpectralVis.jl Documentation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation","title":"Documentation","text":"","category":"page"},{"location":"functionindex.html#Functions","page":"Functions","title":"Functions","text":"","category":"section"},{"location":"functionindex.html","page":"Functions","title":"Functions","text":"Modules = [SpectralVis]\r\nOrder   = [:function, :type]","category":"page"},{"location":"functionindex.html#Base.:*-Tuple{LSpec, RSpec}","page":"Functions","title":"Base.:*","text":"*(a::LSpec, b::RSpec)\n\nresults in a luminance spectrum LSpec due to an illuminant spectrum reflected by a reflectance spectrum.\n\nResult: LSpec\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#Base.:*-Tuple{LSpec, TSpec}","page":"Functions","title":"Base.:*","text":"*(a::LSpec, a::TSpec)\n\nresults in a luminance spectrum LSpec due to an illuminant filtered by a transmission spectrum.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#Base.:*-Tuple{Matrix{Real}, ConeFund}","page":"Functions","title":"Base.:*","text":"(a::Array{Real,2}, c::ConeFund)\n\nConvert cone fundamentals to CMFs.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#Base.:*-Tuple{RSpec, RSpec}","page":"Functions","title":"Base.:*","text":"*(a::RSpec, b::RSpec)\n\nInterreflection between two reflective surfaces\n\nExample:\n\njulia> macbeth(:Macbeth_chart1, :red) * macbeth(:Macbeth_chart1, :orange)\nRSpec(Real[380.0, 390.0, 400.0, 410.0, 420.0, 430.0, 440.0, 450.0, 460.0, 470.0  …  640.0, 650.0, 660.0, 670.0, 680.0, 690.0, 700.0, 710.0, 720.0, 730.0], Real[0.002597, 0.002544, 0.0024909999999999997, 0.0024909999999999997, 0.0024909999999999997, 0.002538, 0.002538, 0.002484, 0.0024749999999999998, 0.00252  …  0.376929, 0.394878, 0.40763199999999994, 0.42066499999999996, 0.43686499999999995, 0.4553, 0.472696, 0.48322000000000004, 0.486576, 0.49293200000000004])\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#Base.:*-Tuple{TSpec, TSpec}","page":"Functions","title":"Base.:*","text":"*(a::TSpec, b::TSpec)\n\nStacking of two filters.\n\nResults in a transmission spectrum TSpec due to the combination of two transmissive spectra using Bouguer’s/Beer’s Law.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#Base.:+","page":"Functions","title":"Base.:+","text":"+(a::RSpec, b::RSpec, ratio=0.5)\n\nLinear combination of two reflectance spectra at a given ratio r * a / (1 - r) * b.\n\nWarning: This is not a physically realistic colorant mixing method!\n\nExamples\n\n\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#Base.:+-Tuple{LSpec, LSpec}","page":"Functions","title":"Base.:+","text":"+(a::LSpec, b::LSpec)\n\nCombination of two luminance spectra. Additive mixture.\n\nExamples:\n\njulia> D_series_illuminant(6504) + D_series_illuminant(4010)\nLSpec(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0,\n822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[71.28837977644169,\n75.09766988566693, 78.90695999489216, 82.7162501041174, 86.52554021334264, 90.33483032256788,\n94.14412043179311, 97.95341054101836, 101.7627006502436, 105.57199075946883  … 148.07280275201228,\n148.84652207565884, 149.6202413993054, 150.39396072295196, 151.16768004659852, 151.94139937024508,\n152.7151186938916, 153.48883801753817, 154.26255734118473, 155.0362766648313])\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.:×-Tuple{LSpec, CMatch}","page":"Functions","title":"SpectralVis.:×","text":"×(l::LSpec, cmf::CMatch)\n\nCreate white point of a light source in XYZ color space.\n\nExamples:\n\n\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.:×-Tuple{LSpec, RSpec, CMatch}","page":"Functions","title":"SpectralVis.:×","text":"×(l::LSpec, r::RSpec, cmf::CMatch)\n\nReturns XYZ color of an illuminant spectrum reflected off a surface.\n\nExamples:\n\n\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.:×-Tuple{LSpec, TSpec, CMatch}","page":"Functions","title":"SpectralVis.:×","text":"×(l::LSpec, t::TSpec, cmf::CMatch)\n\nReturns the XYZ color of an illuminant transmitted through a filter.\n\nExamples:\n\n\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.D40_illuminant-Tuple{}","page":"Functions","title":"SpectralVis.D40_illuminant","text":"D40_illuminant()\n\nResult: ::LSpec of D40 illuminant, with a CCT of  4003 K\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.D50_illuminant-Tuple{}","page":"Functions","title":"SpectralVis.D50_illuminant","text":"D50_illuminant()\n\nResult: ::LSpec of D50 illuminant, with a CCT of  5003 K\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.D55_illuminant-Tuple{}","page":"Functions","title":"SpectralVis.D55_illuminant","text":"D55_illuminant()\n\nResult: ::LSpec of D55 illuminant, with a CCT of  5503 K\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.D65_illuminant-Tuple{}","page":"Functions","title":"SpectralVis.D65_illuminant","text":"D65_illuminant()\n\nResult: ::LSpec of D55 illuminant, with a CCT of  6504 K\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.D75_illuminant-Tuple{}","page":"Functions","title":"SpectralVis.D75_illuminant","text":"D75_illuminant()\n\nResult: ::LSpec of D75 illuminant, with a CCT of 7504 K\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.D93_illuminant-Tuple{}","page":"Functions","title":"SpectralVis.D93_illuminant","text":"D93_illuminant()\n\nResult: ::LSpec of D93 illuminant, with a CCT of 9304 K\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.D_series_generator-Tuple{Real}","page":"Functions","title":"SpectralVis.D_series_generator","text":"D_series_generator(T::Real)\n\nThe relative spectral power distribution SPD(λ) of a D series illuminant at CCT T, from 300 to 830 nm in 5 nm steps. By definition the output spectra are normalized in a way that their luminance is always 100.0 at a wavelength of 560 nm.\n\nAllowed CCT range: 4000 K ≤ CCT ≤ 25000 K\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.D_series_illuminant-Tuple{Real}","page":"Functions","title":"SpectralVis.D_series_illuminant","text":"D_series_illuminant(T::Real)\n\nproduces CIE Daylight spectrum according to desired CCT.\n\nresult: ::LSpec\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.D_series_illuminant-Tuple{SpectralVis.SpecEnv, Real}","page":"Functions","title":"SpectralVis.D_series_illuminant","text":"D_series_illuminant(env::SpecEnv, T::Real)\n\nproduces CIE Daylight spectrum according to desired CCT.\n\nresult: ::LSpec\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.D_series_proper_illuminant-Tuple{Real}","page":"Functions","title":"SpectralVis.D_series_proper_illuminant","text":"D_series_proper_illuminant(T::Real)\n\nGenerates a D-series illuminant with the proper CCT. For example, a D65 illuminant has a proper CCT of 6504 K. CCT according to the International Practical Temperature Scale from 1968.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.D_series_whitepoint-Tuple{Real}","page":"Functions","title":"SpectralVis.D_series_whitepoint","text":"D_series_whitepoint(T::Real)\n\nproduces the white point according to the CIE Daylight Series.\n\nresult: ::XYZ\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.D_series_whitepoint-Tuple{SpectralVis.SpecEnv, Real}","page":"Functions","title":"SpectralVis.D_series_whitepoint","text":"D_series_whitepoint(env::SpecEnv,T::Real)\n\nproduces the white point according to the CIE Daylight Series.\n\nresult: ::XYZ\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.F_series_illuminant-Tuple{SpectralVis.SpecEnv, Int64}","page":"Functions","title":"SpectralVis.F_series_illuminant","text":"F_series_illuminant(n::Int)\n\nReturn F series illuminant Fn for n from 1 to 12.\n\nExamples\n\njulia> F_series_illuminant(1)\nLSpec(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[2.94, 3.046, 3.152, 3.258, 3.3640000000000003, 3.47, 3.81, 4.15, 4.49, 4.83  …  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])\n\njulia> F_series_illuminant(13)\nERROR: DomainError with 13:\nF series illuminant outside the range 1 ≤ n ≤ 12.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.F_series_illuminant-Tuple{Symbol}","page":"Functions","title":"SpectralVis.F_series_illuminant","text":"F_series_illuminant(type::Symbol)\n\nSpectral power distribution of representative fluorescent lamps from 380 to 780 nm in 5 nm steps.\n\nAvailable types:\n\n:f1 ... :f12\n\nF2, F7, and F11 should be preferred over the other distributions as long as the choice in each of these three groups is not important or critical. The three recommendend illuminants are also marked in the CRI lists below.\n\nFor wavelength outside the 380 nm ... 780 nm range the SPDs should be set to zero.\n\nResult: ::LSpec\n\nThese are not CIE Standard Illuminants. They were compiled by the CIE as a representative collection of practical fluorescent lamps. The 12 lamps in this collection can be grouped in 3 groups:\n\nnormal:       two semi-broad band emmisions of antimony and manganese activations in calcium halo-phosphate phosphor.\n\nCRI table \n\nF1: 76\nF2: 64\nF3: 57\nF4: 51\nF5: 72\nF6: 59\n\nbroad-band:   enhanced color rendering properties in comparison to the normal group, mostly by using multiple phosphors. Flatter spectral distributions with a wider spectral range.\n\nCRI table\n\nF7: 90\nF8: 95\nF9: 90\n\nthree-band:   three narrow-band emissions in the red, green, and blue spectral regions. The narrow-band emissions are produced by ternary compositions of rare-earth phosphors.\n\nCRI table\n\nF10: 81\nF11: 83\nF12: 83\n\nExamples\n\njulia> F_series_illuminant(:f11)\nLSpec(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[0.46, 0.442, 0.424, 0.406, 0.388, 0.37, 0.554, 0.738, 0.922, 1.1059999999999999  …  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])\n\njulia> F_series_illuminant(:f0)\nERROR: DomainError with f0:\nF-series illuminant type does not exist.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.adapt_spec","page":"Functions","title":"SpectralVis.adapt_spec","text":"`adapt_spec(spec::Spectrum, specenv::SpecEnvironment = SPECENV, extraptype::Symbol = specenv.ex, interporder...)`\n\nadapts spectra according to the spectral environment.\n\nArguments for extraptype:\n\n:zero, sets SPD outside the data range to zero.\n:boundary, sets SPD outside the data range to boundary values.\n:linear, linear extrapolation of SPD.\n:quadratic, quadratic extrapolation of SPD.\n\nArguments for interporder...:\n\n:linear for linear splines\n:quadratic for quadratic splines\n:cubic, :natural for natural cubic splines (zero curvature at boundaries).\n:cubic, :periodic for periodic cubic splines (both endpoints must have same value).\n:cubic, :clamped, slope_start, slope_end for clamped cubic splines with defined slopes at boundaries.\n:cubic, :constrained for cubic constrained splines.\n\nExamples\n\njulia> adapt_spec(agfait(2), SPECENV, :linear, :cubic, :natural)\nRSpec(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[0.06193665145465862, 0.06273298630919276, 0.06352932116372689, 0.06432565601826104, 0.06512199087279517, 0.06591832572732931, 0.06671466058186346, 0.06751099543639759, 0.06830733029093172, 0.06910366514546587  …  0.44181513985324095, 0.444222702992524, 0.4466302661318069, 0.4490378292710899, 0.45144539241037296, 0.4538529555496559, 0.4562605186889389, 0.45866808182822183, 0.46107564496750486, 0.4634832081067878])\n\njulia> adapt_spec(D65_illuminant(), SPECENV, :zero, :cubic, :clamped, 0.0, 0.0)\nLSpec(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[54.666490682108055, 57.4776549221071, 60.288819162106144, 63.099983402105195, 65.91114764210424, 68.72231188210328, 71.53347612210233, 74.34464036210137, 77.15580460210042, 79.96696884209946  …  57.72152419756936, 58.00867916043931, 58.29583412330925, 58.5829890861792, 58.870144049049145, 59.15729901191909, 59.44445397478904, 59.73160893765898, 60.01876390052893, 0.0])\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.adapted_color-Tuple{Any, Any}","page":"Functions","title":"SpectralVis.adapted_color","text":"adaptated_color(spectrum)\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.agfait-Tuple{Int64}","page":"Functions","title":"SpectralVis.agfait","text":"agfait(idx::Int)\n\nReturns the reflectance spectrum of the selected Agfait872 color patch. Spectral data are from 400 to 700 nm in 10 nm steps.\n\n1st group: 1-264\n\n2nd group: Neutral scale samples (265-286)\n\n3rd group:\n\nblack sample (287)\nwhite sample (288)\nMinolta white calibration sample (289)\n\nExamples\n\njulia> agfait(123)\nRSpec(Real[400.0, 410.0, 420.0, 430.0, 440.0, 450.0, 460.0, 470.0, 480.0, 490.0  …  610.0, 620.0, 630.0, 640.0, 650.0, 660.0, 670.0, 680.0, 690.0, 700.0], Real[0.1282, 0.3004, 0.4806, 0.5796, 0.6429, 0.6818000000000001, 0.7078, 0.7159, 0.7071999999999999, 0.6896  …  0.259, 0.2318, 0.21309999999999998, 0.2, 0.1932, 0.19210000000000002, 0.19699999999999998, 0.2095, 0.2311, 0.2594])\n\njulia> agfait(0)\nERROR: DomainError with 0:\nColor index out of range. Expecting 0 ≤ index ≤ 289.\n\nMeasurer: ela@ee.oulu.fi (University of Oulu, Electrical Eng.Dept)\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.agfait_specs-Tuple{}","page":"Functions","title":"SpectralVis.agfait_specs","text":"agfait_specs()\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.blackbody_illuminant-Tuple{SpectralVis.SpecEnv, Real}","page":"Functions","title":"SpectralVis.blackbody_illuminant","text":"blackbody_illuminant(env::SpecEnv,T::Real)\n\nproduces blackbody spectrum according to desired blackbody temperature in K.\n\nExamples\n\n\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.blackbody_whitepoint-Tuple{SpectralVis.SpecEnv, Real}","page":"Functions","title":"SpectralVis.blackbody_whitepoint","text":"blackbody_whitepoint(env::SpecEnv, T::Real)\n\nproduces the white point according to desired blackbody temperature in K.\n\nExamples\n\n\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.block_spec","page":"Functions","title":"SpectralVis.block_spec","text":"block_spec(λmin, λmax, Δλ, λs, λe, str = 1.0, mode = 0)\n\nRegular block spectrum initialized to 0.0, with blocks λs..λe = 1.0\n\nblock_spec(λmin, λmax, Δλ, λs, λe, str = `1.0`, 1)\n\nInversed block spectrum initialized to 1.0, with blocks λs..λe = 0.0\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.block_spec-Tuple{Real}","page":"Functions","title":"SpectralVis.block_spec","text":"block_spec(λ)\n\nZero block spectrum with only wavelength λ set to 1.0 Fast version to create highest purity optimal colors.\n\nSpectral limits are taken from the spectral environment.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.block_spec-Tuple{SpecEnvironment, Real}","page":"Functions","title":"SpectralVis.block_spec","text":"block_spec(env::SpecEnvironment, λ)\n\nZero block spectrum with only wavelength λ set to 1.0.\n\nFast version to create highest purity optimal colors. Linear interpolation for intermediate λ values.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.chromatic_adaptation","page":"Functions","title":"SpectralVis.chromatic_adaptation","text":"chromatic_adaptation(sourcecolor::Color, sourceWP::Color, destWP::Color = D_series_whitepoint(6504), response::Symbol = :cat02)\n\nAdapt source color according to given source white point and destination white point.  Default destination white point is D65. Default cone response is :cat02.\n\nExamples\n\njulia> chromatic_adaptation(XYZ(0.1, 0.7, 0.05), D_series_whitepoint(4000))\nXYZ{Float64}(0.04957926027638688,0.7081276413719826,0.09614857166385628)\n\njulia> chromatic_adaptation(XYZ(0.1, 0.7, 0.05), D_series_whitepoint(4000), D_series_whitepoint(7500), :bradford)\nXYZ{Float64}(0.0513224358507469,0.7251796437072336,0.06113763051342081)\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.cmfunc-Tuple{ConeFund}","page":"Functions","title":"SpectralVis.cmfunc","text":"cmfunc(conefund::ConeFund)\n\nReturns the full multispectral color matching functions based on the cone fundamental data in cmf_tables.jl. Useful to convert (altered) cone fundamental functions back to color matching functions, e.g. for simulations of color anomalous observers with missing or shifted cone responses.\n\nPossible conefund types:\n\nLMS31, CIE1931 2° observer cone fundamentals\nLMS64, CIE1964 10° observer cone fundamentals\nLMS06_2, CIE2012 2° observer (current CIE 2° standard observer) cone fundamentals\nLMS06_10, CIE2012 10° observer (current CIE 10° standard observer) cone fundamentals\n\nExample\n\njulia> cmfunc(conefund(:cie12_10))\nCIE12_10(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[0.0001205700118214772, 0.00015063103540534432, 0.00018705601478443535, 0.0002308215774282965, 0.00028292144443875793, [...], 0.010780088746948505, 0.012937395576635658, 0.015480114358540253  …  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.cmfunc-Tuple{Symbol}","page":"Functions","title":"SpectralVis.cmfunc","text":"cmfunc(match::Symbol)\n\nReturns the full multispectral matching functions based on the CMF data in cmf_tables.jl\n\nPossible match symbols:\n\n:cie31, CIE1931 2° observer\n:cie64, CIE1964 10° observer\n:cie31_j, CIE1931 observer with corrections by Judd\n:cie31_jv, CIE1964 observer wtih correction by Judd and Vos\n:cie12_2, CIE2012 2° observer (current CIE 2° standard observer)\n:cie12_10, CIE2012 10° observer (current CIE 10° standard observer)\n\nExample\n\njulia> cmfunc(:cie12_2)\nCIE12_2(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[0.003769647, 0.004532416, 0.005446553, 0.006538868, 0.007839699, 0.009382967, 0.01120608, 0.01334965, 0.0158569, 0.01877286  …  2.986206e-6, 2.814999e-6, 2.653663e-6, 2.501725e-6, 2.358723e-6, 2.224206e-6, 2.097737e-6, 1.978894e-6, 1.867268e-6, 1.762465e-6], Real[0.0004146161, 0.0005028333, 0.0006084991, 0.0007344436, 0.0008837389, 0.001059646, 0.001265532, 0.001504753, 0.001780493, 0.002095572  …  1.190771e-6, 1.123031e-6, 1.059151e-6, 9.989507e-7, 9.422514e-7, 8.888804e-7, 8.38669e-7, 7.914539e-7, 7.47077e-7, 7.05386e-7], Real[0.0184726, 0.02221101, 0.02669819, 0.03206937, 0.03847832, 0.04609784, 0.05511953, 0.06575257, 0.07822113, 0.09276013  …  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.cohen_pair","page":"Functions","title":"SpectralVis.cohen_pair","text":"cohen_pair(illum::LSpec, rad::Spectrum, match::ConeFund = conefund(SPECENV.cmf), type::Symbol = :standard)\n\nReturns a pair of Cohen’s fundamental metamer and metameric black according to a light stimulus.\n\nExamples\n\n\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.col-Tuple{Any, LSpec, Color3{T} where T, Any, Any}","page":"Functions","title":"SpectralVis.col","text":"col(type,lum::LSpec,whitepoint::Color3,colmatch,dl)\n\nThis function creates the color loci of the theoretically maximum color gamut under a given illuminant.\n\ntype: color space\n\nlum: illuminant\n\nwhitepoint: XYZ whitepoint\n\ncolmatch: color matching function\n\ndl: delta lambda\n\noutput: a,b,c (locus vectors in given color space)\n\n    x,y,Y for Yxy\n\n    X,Z,Y for XYZ\n\n    a,b,L Lab, DIN99, DIN99d, DIN99o\n\n    u,v,L for Luv\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.colorvisiondeficiency","page":"Functions","title":"SpectralVis.colorvisiondeficiency","text":"colorvisiondeficiency(model::Symbol, deftype::Symbol, c::Spectrum, illum::LSpec = D65_illuminant() , shift::Real = 0.0)\n\ncolor vision deficiency simulation using Jozef Cohen’s matrix-R method.\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.colorvisiondeficiency-2","page":"Functions","title":"SpectralVis.colorvisiondeficiency","text":"colorvisiondeficiency(deftype::Symbol, Δλ::Real = 0.0)\n\nReturns the cone fundamentals for a color deficient observer of a given type.\n\nAllowed types:\n\n:protanope\n:deuteranope\n:tritanope\n:protanomalous\n:deuteranomalous\n:tritanomalous\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.colv-Tuple{Any, LSpec, Color3{T} where T, Any, Any}","page":"Functions","title":"SpectralVis.colv","text":"colv(type,T,colmatch,s)\n\ntype: color space\n\nT: whitepoint correlated color temperature\n\ncolmatch: color matching function\n\ndl: delta lambda\n\noutput: a,b,c (locus vectors in given color space)\n\n    x,y,Y for Yxy\n\n    X,Z,Y for XYZ\n\n    a,b,L for Luv, Lab, DIN99, DIN99d, DIN99o\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.conefund-Tuple{CMatch}","page":"Functions","title":"SpectralVis.conefund","text":"conefund(g::CMatch)\n\nReturns the CIE cone fundamentals associated with a CMF.\n\nPossible types for g:\n\nCIE31, CIE1931 2° observer\nCIE64, CIE1964 10° observer\nCIE12_2, CIE2012 2° observer (current CIE 2° standard observer)\nCIE12_10, CIE2012 10° observer (current CIE 10° standard observer)\n\nExample\n\njulia> conefund(cmfunc(:cie31))\nLMS31(Real[360, 361, 362, 363, 364, 365, 366, 367, 368, 369  …  821, 822, 823, 824, 825, 826, 827, 828, 829, 830], Real[6.209077859e-6, 6.950775712086998e-6, 7.782164998607999e-6, [...], 5.5398906285000006e-8, 5.1646151529000004e-8, 4.814798721600001e-8, 4.488794319300001e-8, 4.1849549307000004e-8])\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.conefund-Tuple{Symbol}","page":"Functions","title":"SpectralVis.conefund","text":"conefund(g::Symbol)\n\nReturns the CIE cone fundamentals according to the requested lms function.\n\nPossible symbols for g:\n\n:lms31, CIE1931 2° observer\n:lms64, CIE1964 10° observer\n:lms06_2, CIE2012 2° observer (current CIE 2° standard observer)\n:lms06_10, CIE2012 10° observer (current CIE 10° standard observer)\n\nExample\n\njulia> conefund(:cie64)\nLMS64(Real[360, 361, 362, 363, 364, 365, 366, 367, 368, 369  …  821, 822, 823, 824, 825, 826, 827, 828, 829, 830], Real[1.5474770176000004e-8, 2.3435133003999998e-8, 3.5282213430000004e-8, [...], 1.4321467274333274e-9, 1.384067146347377e-9, 1.3377105658218067e-9, 1.2930114805124651e-9, 1.2499070138616995e-9, 1.208336807203753e-9])\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.coneresponse","page":"Functions","title":"SpectralVis.coneresponse","text":"coneresponse(response::Symbol)\n\nReturn cone response matrix according to chromatic adaptation transform response.\n\nAvailable transforms:\n\n:xyzscaling Simplest (and worst) method.\n:vonkries\n:bradford Linearized Bradfod transform. Diagonal Matrix Transform (DMT)-type vonKries-Ives transform.\n:sharp Sharp Adaptation Transform. First described by Finlayson et al.\n:fairchild\n:cat97s CIECAM97s adaptation transform\n:cat02 Default transform. Developed for the CIECAM02 color appearance model.\n:hpe Hunt-Pointer-Estevez transform\n:bestof20 by Sabine Süsstrunk: Computing Chromatic Adaptation, PhD thesis, 2005, page 104. Sharpened linear cone response matrix optimized for white-point independence, gamut coverage, and hue constancy. Delivers better results than :cat02 in most cases. Added for experimental purposes.\n\nExamples\n\njulia> coneresponse(:xyzscaling)\n3×3 Matrix{Float64}:\n 1.0  0.0  0.0\n 0.0  1.0  0.0\n 0.0  0.0  1.0\n\njulia> coneresponse(:bradford)\n3×3 Matrix{Float64}:\n  0.8951   0.2664  -0.1614\n -0.7502   1.7135   0.0367\n  0.0389  -0.0685   1.0296\n\njulia> coneresponse(:bestof20)\n3×3 Matrix{Float64}:\n  1.6351  -0.4071  -0.228\n -0.8044   1.7798   0.0246\n  0.0      0.0152   0.9848\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.convmat-Tuple{Symbol}","page":"Functions","title":"SpectralVis.convmat","text":"convmat(g::Symbol)\n\nReturns the conversion matrix to convert CMFs to their associated cone fundamentals (LMS).\n\nResult: 3 × 3 matrix\n\nExample\n\nconvmat(:cie12_10)\n\n3×3 Matrix{Float64}:  1.93986   -1.34664   0.430449  0.692839   0.349676  0.0  0.0        0.0       2.14688\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.deactivate_cone-Tuple{Any, Symbol}","page":"Functions","title":"SpectralVis.deactivate_cone","text":"deactivate_cone(cmf::ConeFund, conetype::Symbol\n\nreturns cone fundamental either l, m, or s cone function deactivated.\n\ncone types: :l, :m, :s\n\nResult: CMatch\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.deactivate_cone-Tuple{Symbol}","page":"Functions","title":"SpectralVis.deactivate_cone","text":"deactivate_cone(conetype::Symbol\n\nreturns cone fundamental either l, m, or s cone function deactivated.\n\ncone types: :l, :m, :s\n\nResult: CMatch\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.draw_ellipses-Tuple{Any, Any}","page":"Functions","title":"SpectralVis.draw_ellipses","text":"draw_ellipses(dataset)\n\nDraws all ellipses of a chosen dataset.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.ellipse-NTuple{5, Any}","page":"Functions","title":"SpectralVis.ellipse","text":"ellipse(u, v, a, b, theta)\n\nCreate coordinate vectors of an ellipse with center coordinates u, v, major axis a, minor axis b, and tilt angle θ.\n\nResult: x::Vector, y::vector\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.ellipse_a-Tuple{Any, Int64}","page":"Functions","title":"SpectralVis.ellipse_a","text":"ellipse_a(dataset, index::Int)\n\nGives the major axis parameter a for a dataset at a given index.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.ellipse_b-Tuple{Any, Int64}","page":"Functions","title":"SpectralVis.ellipse_b","text":"ellipse_b(dataset, index::Int)\n\nGives the minor axis parameter b for a dataset at a given index.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.ellipse_center-Tuple{Any, Int64}","page":"Functions","title":"SpectralVis.ellipse_center","text":"ellipse_center(dataset, index::Int)\n\nGives the pair of coordinates x0, y0 of the ellipse center for a dataset at a given index.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.ellipse_g11-Tuple{Any, Int64}","page":"Functions","title":"SpectralVis.ellipse_g11","text":"ellipse_g11(dataset, index::Int)\n\nGives the ellipse parameter g11 at a given index.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.ellipse_g12-Tuple{Any, Int64}","page":"Functions","title":"SpectralVis.ellipse_g12","text":"ellipse_g12(dataset, index::Int)\n\nGives the ellipse parameter g12 at a given index.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.ellipse_g22-Tuple{Any, Int64}","page":"Functions","title":"SpectralVis.ellipse_g22","text":"ellipse_g22(dataset, index::Int)\n\nGives the ellipse parameter g22 at a given index.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.ellipse_g23-Tuple{Any, Int64}","page":"Functions","title":"SpectralVis.ellipse_g23","text":"ellipse_g23(dataset, index::Int)\n\nGives the ellipse parameter g23 at a given index.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.ellipse_luminance-Tuple{Any, Int64}","page":"Functions","title":"SpectralVis.ellipse_luminance","text":"ellipse_luminance(dataset,index::Int)\n\nGives the luminance in cd/m² of a given test color\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.ellipse_parameters-Tuple{Any, Int64}","page":"Functions","title":"SpectralVis.ellipse_parameters","text":"ellipse_parameters(dataset, index::Int)\n\nGives the entire set of ellipse parameters for a dataset at a given index.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.ellipse_θ-Tuple{Any, Int64}","page":"Functions","title":"SpectralVis.ellipse_θ","text":"ellipse_b(dataset, index::Int)\n\nGives the axis tilt parameter θ for a dataset at a given index.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.ellispe_g13-Tuple{Any, Int64}","page":"Functions","title":"SpectralVis.ellispe_g13","text":"ellipse_g13(dataset, index::Int)\n\nGives the ellipse parameter g13 at a given index.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.ellispe_g33-Tuple{Any, Int64}","page":"Functions","title":"SpectralVis.ellispe_g33","text":"ellipse_g33(dataset, index::Int)\n\nGives the ellipse parameter g33 at a given index.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.fundamental_metamer","page":"Functions","title":"SpectralVis.fundamental_metamer","text":"fundamental_metamer(illum::LSpec, rad::Spectrum, match::ConeFund = conefund(SPECENV.cmf),type::Symbol = :standard)\n\nCreates fundamental metamer of a spectrum according to Cohen’s matrix R method.\n\nExamples:\n\n\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.gamut_vis","page":"Functions","title":"SpectralVis.gamut_vis","text":"gamut_vis(type,T1::Real,dT::Real,T2::Real,colmatch,name::AbstractString,altitude::Real,azimuth::Real,slice=collect(5:5:95))\n\nCreates gamut given by Temperature range\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.gamut_vis-2","page":"Functions","title":"SpectralVis.gamut_vis","text":"gamut_vis(type, title, lum, whitepoint, colmatch,name::AbstractString,altitude::Real,slice=collect(5:5:95))\n\ncreates 3D flyaround of gamut given by illuminant\n\nExample: gamut_vis(Colors.DIN99o,\"DIN99o at 6500K\", D_series_luminance(6500),D_series_whitepoint(6500,CMF2012_10),CMF2012_10,\"DIN99o_6500K_\",35,collect(5:5:95))\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.gas_discharge_illuminant-Tuple{SpectralVis.SpecEnv, Int64}","page":"Functions","title":"SpectralVis.gas_discharge_illuminant","text":"gas_discharge_illuminant(n::Int)\n\nReturns gas discharge type illuminant of index n for n from 1 to 7.\n\nResult: ::LSpec\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.gas_discharge_illuminant-Tuple{Symbol}","page":"Functions","title":"SpectralVis.gas_discharge_illuminant","text":"gas_discharge_illuminant(type::Symbol)\n\nSPDs of common gas discharge lamps.\n\navailable types:\n\n:lps:   Low pressure sodium\n:hps:   High pressure sodium\n:mb:    High pressure mercury\n:mbf:   High pressure mercury with red-emitting phosphor coating, better CRI than MB\n:mbtf:  High pressure mercury with red-emitting phopsphor coating and tungsten filament ballast, better CRI\n:hmi:   High pressure mercury with metal halides. Medium arc, iodides, typical stadium lighting, was used in television to supplement daylight\n:xenon: Xenon, used in film projectors in cinemas, floodlighting, in lighthouses, for accelerated fading tests, flash photography, lighting fluorescent materials\n\nExample\n\njulia> gas_discharge_illuminant(:lps)\nLSpec(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[0.0, 0.02, 0.04, 0.06, 0.08, 0.1, 0.08, 0.060000000000000005, 0.04000000000000001, 0.020000000000000004  …  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])\n\njulia> gas_discharge_illuminant(:xenon)\nLSpec(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[96.33, 97.176, 98.022, 98.868, 99.714, 100.56, 101.01, 101.46000000000001, 101.91, 102.36  …  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.hardlimit_spec","page":"Functions","title":"SpectralVis.hardlimit_spec","text":"`hardlimit_spec(s::Spectrum,limit::Real = 1.0)`\n\nHardlimits an SPD to the maximum value limit.\n\nDefault limit is 1.0\n\nExamples\n\njulia> hardlimit_spec(D50_illuminant())\nLSpec(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0  …  1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0])\n\njulia> hardlimit_spec(D_series_illuminant(6500),59.0)\nLSpec(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[54.60212796545921, 57.41151658372402, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0  …  57.744482738230694, 58.03176686777033, 58.319050997309965, 58.6063351268496, 58.893619256389236, 59.0, 59.0, 59.0, 59.0, 59.0])\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.illuminant_A","page":"Functions","title":"SpectralVis.illuminant_A","text":"illuminant_A(env::SpecEnv = SPECENV)\n\nProduces the spectrum of illuminant A, which represents tungsten-filament lighting, depending on the limits defined by SPECENV. The relative spectral power distribution is equal to a Planckian spectrum at T ≊ 2856 K, which is also its CCT.\n\nCCT according to the International Practical Temperature Scale from 1968.\n\nThis is the illuminant that should always be used when incandescent lighting is involved.\n\nExample\n\njulia> illuminant_A()\nLSpec(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[1.0161486323473047e11, 1.0369227145593657e11, 1.05797774054285e11, 1.0793148447599527e11, 1.1009351284197664e11, 1.1228396592637178e11, 1.1450294713618913e11, 1.1675055649202544e11, 1.1902689060987242e11, 1.2133204268399858e11  …  2.17270715240179e12, 2.1757420157602646e12, 2.178757889232851e12, 2.1817547874185107e12, 2.1847327254181292e12, 2.1876917188295703e12, 2.190631783742765e12, 2.1935529367348203e12, 2.196455194865146e12, 2.199338575670583e12])\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.illuminant_B","page":"Functions","title":"SpectralVis.illuminant_B","text":"illuminant_B(env::SpecEnv = SPECENV)\n\nProduces the spectrum of CIE Standard Illuminant B, with a CCT of ≈4874 K. Originally intended to represent sunlight. Now obsolete, but according to Hunt the European brewing industry still uses an approximation of this illuminant.\n\nExample\n\njulia> illuminant_B()\nLSpec(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[0.313, 0.3223587343061588, 0.3319703445293299, 0.3417825875994216, 0.3517432204463422, 0.3618, 0.3719111024629742, 0.38207638112852754, 0.3923061085625939, 0.4026105573311068  …  7.557164594645486e-6, 9.446455743306857e-6, 7.557164594645484e-6, 3.778582297322749e-6, 1.734723475976807e-20, -2.267149378393646e-6, -3.0228658378581947e-6, -2.6450076081259192e-6, -1.5114329189290965e-6, -2.168404344971009e-21])\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.illuminant_C","page":"Functions","title":"SpectralVis.illuminant_C","text":"illuminant_C(env::SpecEnv)\n\nProduces the spectrum of CIE Standard Illuminant C, with a CCT of ≈ 6774 K. Originally intended to represent average daylight.\n\nExample\n\njulia> illuminant_C()\nLSpec(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[0.474, 0.489271743700384, 0.5046749637120697, 0.5202123118735634, 0.5358864400233714, 0.5517, 0.5676560269088902, 0.583759088923221, 0.6000141374831071, 0.616426124028662  …  0.7121636730114121, 0.7159995912642652, 0.7194836730114121, 0.722791836505706, 0.7261, 0.7295488980965763, 0.7331385307954352, 0.7368337144460056, 0.7405992653977175, 0.7444])\n\nHow the CIE Standard Illuminant C is produced:\n\nStandard Source A is combined with a filter made of two 1 cm thick layers, containing two solutions, C₁ and C₂. The solutions are contained in a double cell that is made of a colorless optical glass.\n\nSolution C₁:\n\n3.412 g copper sulphate (CuSO_45H_2O)\n3.412 g mannite [C_6H_8(OH)_6]\n30.0 ml pyridine (C_5H_5N)\n1000.0 ml distilled water\n\nSolution C₂:\n\n30.58 g cobalt ammonium sulphate [CoSO_4(NH_4)_2SO_46H_2O]\n22.52 g copper sulphate (CuSO_45H_2O)\n10.0 ml sulphuric acid (density 1.835 g/ml)\n1000.0 ml distilled water\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.inglingtsou_opponent-Tuple{ConeFund}","page":"Functions","title":"SpectralVis.inglingtsou_opponent","text":"inglingtsou_opponent(conefund::ConeFund)\n\nConverts cone fundamentals to color opponent channels using the Ingling-Tsou transformation matrix.\n\nSignal flow of the two-stage model of human color vision:\n\n    L              M                    S   photoreceptor\n    ┃              ┃                    ┃      stage\n    ┃              ┃     ┏━━━━━━━━━━━━━━┫      (CMFs)\n    ┃  ┏━━━━━━━━━━━╋━━━━━┃━━━━━━━━━┓    ┃\n    ┃  ┃           ┃     ┃         ┃    ┃\n ┏━━┻━━┃━━━━━┳━━━━━┃━━━━━┃━━━━┓    ┃    ┃\n ┃     ┃     ┃     ┃     ┃    ┃    ┃    ┃\n ┃     ┃     ┃     ┃     ┃    ┃    ┃    ┃\n ┃     ┃     ┃     ┃     ┃    ┃    ┃    ┃       \n0.6   0.4  0.24  0.105  0.7  1.2  1.6  0.4   factors\n ║     ║     ║     ║     ║    ║    ║    ║\n ╚══╦══╝     ╚═════╬═════╝    ╚════╬════╝\n    ║              ║               ║\n    ║              ║               ║\n L  +  M     L  +  M  -  S    L  - M +  S     opponent\n    ║              ║               ║           stage\n    Vλ            y-b             r-g\n\nlightness     yellow-blue       red-green\n\nExample\n\njulia> inglingtsou_opponent(conefund(SPECENV.cmf))\nVYBRG(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[0.0003878623982, 0.0004737047352, 0.000577319691, 0.0007018085474, 0.0008506078488000001, 0.0010274557607999999, 0.001236329446, 0.0014813467259999998, 0.001766625772, 0.0020960976039999996  …  9.411752703999999e-7, 8.876810727999999e-7, 8.372313131999999e-7, 7.896833636e-7, 7.448974792000001e-7, 7.027372568e-7, 6.630699992e-7, 6.257670254799999e-7, 5.9070389244e-7, 5.5776058904e-7], Real[-0.004164411112444999, -0.00504460427438, -0.006110193693075, -0.007397180969524999, -0.00894723637031, -0.010808111330739998, -0.013033902761799998, -0.01568509182405, -0.018828265622099997, -0.02253541766325  …  3.6881237642999995e-7, 3.4782318591e-7, 3.2803082274e-7, 3.0937903046999996e-7, 2.9181270796499996e-7, 2.7527808831e-7, 2.5972288066499997e-7, 2.450963909835e-7, 2.31349607448e-7, 2.18435275848e-7], Real[0.0023730382284000004, 0.0028717459496, 0.003474333342, 0.00420068739, 0.0050737833632, 0.0061199115808, 0.007368828876, 0.008853794675999999, 0.010611444512, 0.012681445520000003  …  1.5481949744e-6, 1.4590315327999997e-6, 1.3750428792e-6, 1.2959784376e-6, 1.2215934872e-6, 1.1516498848e-6, 1.0859166232e-6, 1.02417030368e-6, 9.661954418399999e-7, 9.117847518400001e-7])\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.led-Tuple{Any, Any, Any}","page":"Functions","title":"SpectralVis.led","text":"LED helper function\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.led_spec-NTuple{5, Any}","page":"Functions","title":"SpectralVis.led_spec","text":"led_spec(λmin, λmax, Δλ, λ0, Δλ1_2)\n\nLED spectrum simulation\n\nλ0: peak wavelength\nΔλ1_2: half spectral width, width at 50% peak intensity\n\nResult: LSpec\n\nSource: Yoshi Ohno (2004), Simulation Analysis of White LED Spectra and Color Rendering,         Proceedings for CIE Expert Sumposium on LED Light Sources, Tokyo, JA (Accessed May 27, 2021) \n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.luminance_spec-Tuple{Any, Any}","page":"Functions","title":"SpectralVis.luminance_spec","text":"luminance_spec(λ,r)`\n\nLuminance spectrum of type RSpec\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.macbeth-Tuple{Symbol, Int64}","page":"Functions","title":"SpectralVis.macbeth","text":"macbeth(colorchart::Symbol,num::Int)\n\nreturns RSpec of one of the 24 MacBeth color patches of a given number.\n\navailable color charts:\n\n:Macbeth_chart1, λ=380:10:730 nm, average of multiple measured charts from BabelColor\n\n:Macbeth_chart2, λ=380:4:780 nm\n\n:Macbeth_chart3, λ=380:5:780 nm\n\navailable color patch numbers: 1 to 24\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.macbeth-Tuple{Symbol, Symbol}","page":"Functions","title":"SpectralVis.macbeth","text":"macbeth(colorchart::Symbol,color::Symbol)\n\nreturns RSpec of one of the 24 MacBeth color patches of a given name.\n\navailable color charts:\n\n:Macbeth_chart1, λ=380:10:730 nm, average of multiple measured charts from BabelColor\n\n:Macbeth_chart2, λ=380:4:780 nm\n\n:Macbeth_chart3, λ=380:5:780 nm\n\navailable color names:\n\n:darkskin, :lightskin, :bluesky, :foliage, :blueflower, :bluishgreen,\n\n:orange, :purplishblue, :moderatered, :purple, :yellowgreen, :orangeyellow,\n\n:blue, :green, :red, :yellow, :magenta, :cyan,\n\n:white95, :neutral8, :neutral65, :neutral5, :neutral35, :black2\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.matrixA","page":"Functions","title":"SpectralVis.matrixA","text":"matrixA(match::ConeFund = conefund(SPECENV.cmf), type::Symbol = :standard)\n\nCreates matrix A from a cone fundamental for Cohen’s matrix R calculations.\n\nAvailable types:\n\n:protanopia\n:deuteranopia\n:tritanopia\n:standard\n\nExamples:\n\njulia> matrixA(conefund(SPECENV.cmf))\n441×3 Matrix{Float64}:\n 0.0108549   0.00218811  0.028312\n 0.0131472   0.00265254  0.0343045\n 0.0159195   0.00321355  0.0415584\n 0.0192642   0.00388931  0.0503177\n[...]\n 2.6301e-6   1.56603e-6  0.0\n 2.48078e-6  1.47742e-6  0.0\n 2.34056e-6  1.39418e-6  0.0\n 2.20894e-6  1.31601e-6  0.0\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.matrixR","page":"Functions","title":"SpectralVis.matrixR","text":"matrixR(match::ConeFund = conefund(SPECENV.cmf), type::Symbol = :standard)\n\nCreates Cohen’s matrix R from a given CMF. For available types, see matrixA.\n\nExamples:\n\njulia> matrixR(conefund(SPECENV.cmf), :deuteranopia)\n441×441 Matrix{Float64}:\n 9.97123e-7   1.20808e-6   1.4634e-6    1.77166e-6   …  4.61275e-11  4.35087e-11  4.10494e-11  3.8741e-11\n 1.20808e-6   1.46367e-6   1.77301e-6   2.14648e-6      5.57733e-11  5.26069e-11  4.96333e-11  4.68422e-11\n 1.4634e-6    1.77301e-6   2.14773e-6   2.60013e-6      6.73948e-11  6.35686e-11  5.99755e-11  5.66027e-11\n[...]\n 4.35087e-11  5.26069e-11  6.35686e-11  7.6741e-11      5.56939e-14  5.2532e-14   4.95627e-14  4.67755e-14\n 4.10494e-11  4.96333e-11  5.99755e-11  7.24034e-11     5.25459e-14  4.95627e-14  4.67613e-14  4.41316e-14\n 3.8741e-11   4.68422e-11  5.66027e-11  6.83317e-11  …  4.95909e-14  4.67755e-14  4.41316e-14  4.16498e-14\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.mbcolor-Tuple{RSpec, LSpec}","page":"Functions","title":"SpectralVis.mbcolor","text":"mbcolor(spec::RSpec,illum::LSpec)\n\nreturns XYZ color according to illuminant\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.mbspec-Tuple{Symbol, Int64}","page":"Functions","title":"SpectralVis.mbspec","text":"mbspec(colorchart::Symbol, num::Int)\n\nreturns RSpec adapted to th 390:830 nm range of the standard CMF\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.mbspec-Tuple{Symbol, Symbol}","page":"Functions","title":"SpectralVis.mbspec","text":"mbspec(colorchart::Symbol,name::Symbol)\n\nreturns RSpec adapted to SPECENV limits for λ.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.mer_caltarget-Tuple{Int64}","page":"Functions","title":"SpectralVis.mer_caltarget","text":"mer_caltarget(color::Int)\n\nReturns the spectrum of a given MER Caltarget color patch.\n\nAllowed color patch indices: 1 ≤ color ≤ 7.\n\nResult: RSpec\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.mer_caltarget-Tuple{Symbol}","page":"Functions","title":"SpectralVis.mer_caltarget","text":"mer_caltarget(color::Symbol)\n\nReturns the spectrum of a given MER Caltarget color patch.\n\nAllowed color patch names:\n\n:white, :grey, :black, :yellow, :red, :green, :blue\n\nResult: RSpec\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.metameric_black","page":"Functions","title":"SpectralVis.metameric_black","text":"metameric_black(illum::LSpec, rad::Spectrum, match::ConeFund = conefund(SPECENV.cmf), type::Symbol = :standard)\n\nCreates metameric black  according to Cohen’s matrix R method.\n\nExamples\n\n\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.mineral","page":"Functions","title":"SpectralVis.mineral","text":"mineral(mineral::Symbol, spectable = mineral_specs(mineral))\n\nReturns reflectance spectrum of chosen mineral.\n\nAllowed names for mineral: :augite, :goethite, :hematite, :pigeonite\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.mineral_specs-Tuple{Symbol}","page":"Functions","title":"SpectralVis.mineral_specs","text":"mineral_specs(mineral::Symbol)\n\nReads and returns the spectral data of a chosen mineral.\n\nAvailable mineral types:\n\n:augite\n:goethite\n:hematite\n:pigeonite\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.munsell_spec","page":"Functions","title":"SpectralVis.munsell_spec","text":"munsell_spec(idx::Int, speclist)\n\nReturns reflectance spectrum of the Munsell dataset at index idx. Possible indices go from 1 to 1269\n\nExample\n\njulia> munsell_spec(437, speclist)\nRSpec(Real[380, 381, 382, 383, 384, 385, 386, 387, 388, 389  …  791, 792, 793, 794, 795, 796, 797, 798, 799, 800], Real[0.1184, 0.1208, 0.124, 0.1301, 0.1349, 0.1431, 0.1498, 0.1579, 0.1631, 0.1731  …  0.3355, 0.3364, 0.3345, 0.3337, 0.3327, 0.3348, 0.3392, 0.3377, 0.335, 0.3351])\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.munsell_specs-Tuple{}","page":"Functions","title":"SpectralVis.munsell_specs","text":"munsell_specs()\n\nReturns an array containing all 1269 munsell spectra, measured from 380 to 800 nm in 1 nm steps.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.normalize_D_series-Tuple{Spectrum}","page":"Functions","title":"SpectralVis.normalize_D_series","text":"normalize_D_series(s::Spectrum)\n\nnormalize a D_series spectrum to 1.0 at 560 nm.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.normalize_blackbody-Tuple{Spectrum}","page":"Functions","title":"SpectralVis.normalize_blackbody","text":"`normalize_blackbody(s::Spectrum)`\n\nNormalize a blackbody spectrum analogous to D series to 1.0 at 560 nm.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.normalize_spec-Tuple{Spectrum, Real}","page":"Functions","title":"SpectralVis.normalize_spec","text":"normalize_spec(s::Spectrum,value::Real)\n\nreturns a spectrum with reflectance distribution normalized to value relative to max.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.normalize_spec-Tuple{Spectrum}","page":"Functions","title":"SpectralVis.normalize_spec","text":"normalize_spec(s::Spectrum)\n\nreturns a spectrum with reflectance values normalized to 1.0\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.normalized_D_series-Tuple{SpectralVis.SpecEnv, Real}","page":"Functions","title":"SpectralVis.normalized_D_series","text":"normalized_D_series(env::SpecEnv = SPECENV, T::Real)\n\nproduces CIE Daylight spectrum according to desired CCT, normalized to l=100 at λ=560 nm.\n\nExamples\n\njulia> normalized_D_series(SPECENV, 6500)\nLSpec(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[0.5460212796545921, 0.5650827295052294, 0.590288902296674, 0.620011293254124, 0.6526213976027774, 0.6864907105678326, 0.7200645866061678, 0.7520838171013811, 0.7813630526687508, 0.8067169439235554  …  0.578028743266789, 0.5810475635333059, 0.5837744258575818, 0.5863553092107371, 0.5889361925638924, 0.5916338590939442, 0.5944483088008923, 0.5973503458905127, 0.6003107745685814, 0.6033003990408742])\n\nnormalized_D_series(9300)\nLSpec(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[0.9296442162075731, 0.9527892027932645, 0.9854018656135435, 1.0248615127313507, 1.0685474522096268, 1.1138389921113123, 1.158318458802078, 1.2003802518585145, 1.2386217891599418, 1.2716404885856807  …  0.4869584146523383, 0.4894740470571454, 0.4917569270423351, 0.4939234308177161, 0.4960899345930971, 0.49834953933632503, 0.5007022450474, 0.5031247764843602, 0.5055938584052438, 0.5080862155680892])\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.reflectance_spec-Tuple{Any, Any}","page":"Functions","title":"SpectralVis.reflectance_spec","text":"reflectance_spec(λ,r)\n\nReflectance spectrum of type RSpec\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.reinterpolate","page":"Functions","title":"SpectralVis.reinterpolate","text":"reinterpolate(spectrum,λmin,Δλ,λmax,style=:natural)\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.set_colormatch-Tuple{SpecEnvironment, Symbol}","page":"Functions","title":"SpectralVis.set_colormatch","text":"set_colormatch(env::SpecEnvironment, colormatch::CMatch)\n\nSets the color matching function (CMF) used in a defined spectral environment.\n\nAvailable CMFs:\n\n:cie31, :cie31_j, :cie31_jv, :cie64, :cie12_2, :cie12_10, :lms06_2, :lms06_10\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.set_colormatch-Tuple{Symbol}","page":"Functions","title":"SpectralVis.set_colormatch","text":"set_colormatch(colormatch::CMatch)\n\nSets the color matching function (CMF) used in the spectral environment.\n\nAvailable CMFs:\n\n:cie31, :cie31_j, :cie31_jv, :cie64, :cie12_2, :cie12_10, :lms06_2, :lms06_10\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.set_extrap-Tuple{SpecEnvironment, Symbol}","page":"Functions","title":"SpectralVis.set_extrap","text":"set_extrap(env::SpecEnvironment,extrapolation::Symbol)\n\nSets the extrapolation mode of the environment env to one of the available extrapolation settings:\n\n:none or :zero: out of range values are zero.\n\n:constant: out of range values are set to λmin and λmax, respectively.\n\n:linear: out of range values are linearly extrapolated through the first/last two data points.\n\n:parabolic: out fo range values are extrapolated with a parabola through the first/last three datapoints. Recommended extrapolation method according to D.L. MacAdams in \"Color Measurement\", chapter 5.4 \"Truncations\".\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.set_extrap-Tuple{Symbol}","page":"Functions","title":"SpectralVis.set_extrap","text":"set_extrap(extrapolation::Symbol)\n\nSets the extrapolation mode of the environment env to one of the available extrapolation settings:\n\n:none or :zero: out of range values are zero.\n\n:constant: out of range values are set to λmin and λmax, respectively.\n\n:linear: out of range values are linearly extrapolated through the first/last two data points.\n\n:parabolic: out fo range values are extrapolated with a parabola through the first/last three datapoints. Recommended extrapolation method according to D.L. MacAdams in \"Color Measurement\", chapter 5.4 \"Truncations\".\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.set_limits-Tuple{Real, Real, Real}","page":"Functions","title":"SpectralVis.set_limits","text":"set_limits(λmin::Real,Δλ::Real,λmax::Real)\n\nsets the wavelength limits and resolution of the spectral environment\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.set_limits-Tuple{SpecEnvironment, Real, Real, Real}","page":"Functions","title":"SpectralVis.set_limits","text":"set_limits(env::SpecEnvironment, λmin::Real,Δλ::Real,λmax::Real)\n\nsets the wavelength limits and resolution of the spectral environment\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.set_specenv","page":"Functions","title":"SpectralVis.set_specenv","text":"set_specenv(λmin=390.0,Δλ=1.0,λmax=830.0,extrapolate= :zero)\n\nInitializes the spectral environment to standard values:\n\nλmin = 380.0 nm λmax = 830.0 nm Δλ   =   1.0 nm cmf  = cmfunc(:cie12_10) ex = :linear\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.shift_cone-Tuple{CMatch, Symbol, Real}","page":"Functions","title":"SpectralVis.shift_cone","text":"shift_colormatch(cmf::CMatch, conetype::Symbol, Δλ)\n\nreturns cone fundamental associated with the given CMF, with shifted cone response function l, m, or s\n\ncone types: :l, :m, :s\n\nResult: CMatch\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.shift_cone-Tuple{ConeFund, Symbol, Real}","page":"Functions","title":"SpectralVis.shift_cone","text":"shift_colormatch(cmf::ConeFund,conetype::Symbol,Δλ)\n\nreturns cone fundamental with shifted cone response function l, m, or s.\n\ncone types: :l, :m, :s\n\nResult: CMatch\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.shift_spec-Tuple{Spectrum, Any}","page":"Functions","title":"SpectralVis.shift_spec","text":"shift_spec(spec::Spectrum,Δλ)\n\nReturns spectrum of same type, shifted by Δλ\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.sinusoidal_spd","page":"Functions","title":"SpectralVis.sinusoidal_spd","text":"sinusoidal_spd(freq::Real, modfac::Real = 1.0, ampl::Real = 1.0, phase::Real, r = (SPECENV.λmin:SPECENV.Δλ:SPECENV.λmax))\n\nGenerates a sinusoidal spectral power distribution. Useful for computational gamut and spectral calculations.\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.skin_simulation-Tuple{}","page":"Functions","title":"SpectralVis.skin_simulation","text":"skin_simulation()\n\nSkin optics Simulation\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.sl-Tuple{Any, LSpec, Any, Any, Any, Any, Any}","page":"Functions","title":"SpectralVis.sl","text":"sl(type,lum::LSpec,whitepoint,colmatch,s,d,e)\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.spec_extrapolate","page":"Functions","title":"SpectralVis.spec_extrapolate","text":"spline_extrap(Spl, env=SPECENV)\n\nextrapolation of a spline according to spectral environment.\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.transmittance_spec-Tuple{Any, Any}","page":"Functions","title":"SpectralVis.transmittance_spec","text":"transmittance_spec(λ,t)\n\nTansmittance spectrum at unit thickness (x = 1.0).\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.transmittance_spec-Tuple{Vector{Real}, Vector{Real}, Real, Real}","page":"Functions","title":"SpectralVis.transmittance_spec","text":"transmittance_spec(λ,t,d,d0)\n\nTransmittance spectrum with thickness term d. Unit thickness is d0, according to Bouguer’s Law/Lambert’s Law.\n\nSee: \"Color Measurement\" by David L. MacAdam, chapter 3.2: \"Bougouer’s Law\"\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.transmittance_spec-Tuple{Vector{Real}, Vector{Real}, Real}","page":"Functions","title":"SpectralVis.transmittance_spec","text":"transmittance_spec(λ, t, x)\n\nTransmittance spectrum with thickness x given relative to unit thickness, according to Bougouer’s Law/Lambert’s Law.\n\nSee: \"Color Measurement\" by David L. MacAdam, chapter 3.2: \"Bouguer’s Law\"\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.tristimulus","page":"Functions","title":"SpectralVis.tristimulus","text":"tristimulus(illum::LSpec, rad::Spectrum, match::ConeFund = conefund(SPECENV.cmf), type::Symbol = :standard)\n\nCreates tristimulus values resulting from radiometric function/stimulus reaching the eye, according to Cohen’s matrix R method.\n\nExamples:\n\njulia> tristimulus(D65_illuminant(), adapt_spec(agfait(100), SPECENV, :zero, :cubic, :natural)) 3-element Vector{Any}:  2827.9824977740263  4605.154579468038  6719.982399962246`\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.vybrg","page":"Functions","title":"SpectralVis.vybrg","text":"vybrg(conefund::ConeFund = conefund(SPECENV.cmf))\n\nReturns the Ingling-Tsou opponent color functions based on the cone fundamental functios.\n\nExample\n\njulia> c = conefund(:cie12_2); vybrg(c)\nVYBRG(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[0.0003963417152, 0.0004807961832, 0.0005820062634, [...], 1.4450193672e-6, 1.3620748624e-6, 1.2840832415999998e-6,] 1.2107868407999998e-6, 1.1419364999999999e-6, 1.0772919015999998e-6, 1.0166218466399999e-6])\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.wratten-Tuple{Int64}","page":"Functions","title":"SpectralVis.wratten","text":"wratten(f::Int)\n\nReturns `TSpec` of one of the Wratten filters of a given index `f` in the range `0 < f < 128`.\n\nExamples\n\njulia> wratten(77)\nTSpec(Real[400.0, 410.0, 420.0, 430.0, 440.0, 450.0, 460.0, 470.0, 480.0, 490.0  …  610.0,\n 620.0, 630.0, 640.0, 650.0, 660.0, 670.0, 680.0, 690.0, 700.0], Real[0.6409999999999999,\n  0.665, 0.684, 0.695, 0.7, 0.6940000000000001, 0.675, 0.654, 0.629, 0.598  …  0.4, 0.376,\n   0.355, 0.342, 0.336, 0.34, 0.341, 0.345, 0.348, 0.36], 1.0)\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.wratten-Tuple{Symbol}","page":"Functions","title":"SpectralVis.wratten","text":"wratten(f::Symbol)\n\nReturns TSpec of one of the Wratten filters of a given name f.\n\nExamples\n\njulia> wratten(:n44)\nTSpec(Real[400.0, 410.0, 420.0, 430.0, 440.0, 450.0, 460.0, 470.0, 480.0, 490.0  …  610.0, \n620.0, 630.0, 640.0, 650.0, 660.0, 670.0, 680.0, 690.0, 700.0], Real[0.0044, 0.0036, 0.0063,\n 0.0363, 0.131, 0.254, 0.365, 0.465, 0.536, 0.568…  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n  0.0018, 0.016], 1.0)\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.wratten_filter","page":"Functions","title":"SpectralVis.wratten_filter","text":"wratten_filter(f::Int, x::Real)\n\nReturns TSpec of one of the Wratten filters of a given name adapted to SPECENV settings. x is relative to unit thickness.\n\n\n\n\n\n\n\n","category":"function"},{"location":"functionindex.html#SpectralVis.wratten_filter-Tuple{Int64}","page":"Functions","title":"SpectralVis.wratten_filter","text":"wratten_filter(f::Int)\n\nreturns TSpec of one of the Wratten filters at unit thickness.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.wratten_filter-Tuple{Symbol, Real}","page":"Functions","title":"SpectralVis.wratten_filter","text":"wratten_filter(f::Symbol)\n\nreturns TSpec of one of the Wratten filters of a given name adapted to SPECENV settings.\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.wratten_filter-Tuple{Symbol}","page":"Functions","title":"SpectralVis.wratten_filter","text":"wratten_filter(f::Symbol)\n\nreturns TSpec of one of the Wratten filters of a given name at unit thickness x = 1.0\n\n\n\n\n\n","category":"method"},{"location":"functionindex.html#SpectralVis.CIE12_10","page":"Functions","title":"SpectralVis.CIE12_10","text":"CIE12_10\n\nType of CIE 2012 10° observer color matching function. Current CIE 10° standard observer.\n\n\n\n\n\n","category":"type"},{"location":"functionindex.html#SpectralVis.CIE12_2","page":"Functions","title":"SpectralVis.CIE12_2","text":"CIE12_2\n\nType of CIE 2012 2° observer color matching function. Current CIE 2° standard observer.\n\n\n\n\n\n","category":"type"},{"location":"functionindex.html#SpectralVis.CIE31","page":"Functions","title":"SpectralVis.CIE31","text":"CIE31\n\nType of CIE 1931 2° observer color matching function.\n\n\n\n\n\n","category":"type"},{"location":"functionindex.html#SpectralVis.CIE31_J","page":"Functions","title":"SpectralVis.CIE31_J","text":"CIE31_J\n\nType of CIE 1931 2° observer color matching function with Judd corrections.\n\n\n\n\n\n","category":"type"},{"location":"functionindex.html#SpectralVis.CIE31_JV","page":"Functions","title":"SpectralVis.CIE31_JV","text":"CIE31_JV\n\nType of CIE 1931 2° observer color matching function with corrections by Judd and Vos.\n\n\n\n\n\n","category":"type"},{"location":"functionindex.html#SpectralVis.CIE64","page":"Functions","title":"SpectralVis.CIE64","text":"CIE31_J\n\nType of CIE 1964 10° observer color matching function.\n\n\n\n\n\n","category":"type"},{"location":"functionindex.html#SpectralVis.LMS06_10","page":"Functions","title":"SpectralVis.LMS06_10","text":"LMS06_10\n\nType of CIE 2006 10° observer cone fundamentals.\n\n\n\n\n\n","category":"type"},{"location":"functionindex.html#SpectralVis.LMS06_2","page":"Functions","title":"SpectralVis.LMS06_2","text":"LMS06_2\n\nType of CIE 2006 2° observer cone fundamentals.\n\n\n\n\n\n","category":"type"},{"location":"functionindex.html#SpectralVis.LMS31","page":"Functions","title":"SpectralVis.LMS31","text":"LMS31\n\nType of CIE 1931 2° observer cone fundamentals.\n\n\n\n\n\n","category":"type"},{"location":"functionindex.html#SpectralVis.LMS64","page":"Functions","title":"SpectralVis.LMS64","text":"LMS64\n\nType of CIE 1964 10° observer cone fundamentals.\n\n\n\n\n\n","category":"type"},{"location":"functionindex.html#SpectralVis.LSpec","page":"Functions","title":"SpectralVis.LSpec","text":"LSpec, Luminance Spectrum\n\nFields:\n\nλ::Vector{Real}, vector containing wavelengths\nl::Vector{Real}, vector containing luminance values\n\n\n\n\n\n","category":"type"},{"location":"functionindex.html#SpectralVis.RSpec","page":"Functions","title":"SpectralVis.RSpec","text":"RSpec, Reflectance Spectrum\n\nFields:\n\nλ::Vector{Real}, vector containing wavelengths\n`r::Vector{Real}, vector containing reflectanceS values\n\n\n\n\n\n","category":"type"},{"location":"functionindex.html#SpectralVis.TSpec","page":"Functions","title":"SpectralVis.TSpec","text":"TSpec, Transmittance spectrum\n\nFields:\n\nλ::Vector{Real}, vector containing wavelengths\nt::Vector{Real}, vector containing transmittance values\nx::Real, unit thickness value\n\n\n\n\n\n","category":"type"},{"location":"functionindex.html#SpectralVis.VYBRG","page":"Functions","title":"SpectralVis.VYBRG","text":"VYBRG\n\nType of Ingling-Tsou color opponent space functions with Vλ (lightness), yb (yellow-blue), rg (red-green) color channels.\n\n\n\n\n\n","category":"type"},{"location":"spectralgenerators.html#Spectral-generators","page":"Spectral Generators","title":"Spectral generators","text":"","category":"section"},{"location":"spectralgenerators.html","page":"Spectral Generators","title":"Spectral Generators","text":"SpectralVis offers a variety of useful generators for different kinds of spectra.","category":"page"},{"location":"spectralgenerators.html#Block-Spectra","page":"Spectral Generators","title":"Block Spectra","text":"","category":"section"},{"location":"spectralgenerators.html","page":"Spectral Generators","title":"Spectral Generators","text":"block_spec","category":"page"},{"location":"spectralgenerators.html#SpectralVis.block_spec","page":"Spectral Generators","title":"SpectralVis.block_spec","text":"block_spec(λmin, λmax, Δλ, λs, λe, str = 1.0, mode = 0)\n\nRegular block spectrum initialized to 0.0, with blocks λs..λe = 1.0\n\nblock_spec(λmin, λmax, Δλ, λs, λe, str = `1.0`, 1)\n\nInversed block spectrum initialized to 1.0, with blocks λs..λe = 0.0\n\n\n\n\n\nblock_spec(env::SpecEnvironment, λ)\n\nZero block spectrum with only wavelength λ set to 1.0.\n\nFast version to create highest purity optimal colors. Linear interpolation for intermediate λ values.\n\n\n\n\n\nblock_spec(λ)\n\nZero block spectrum with only wavelength λ set to 1.0 Fast version to create highest purity optimal colors.\n\nSpectral limits are taken from the spectral environment.\n\n\n\n\n\n","category":"function"},{"location":"spectralgenerators.html#LED-spectrum-generator","page":"Spectral Generators","title":"LED spectrum generator","text":"","category":"section"},{"location":"spectralgenerators.html","page":"Spectral Generators","title":"Spectral Generators","text":"This generator simulates LED type spectra.","category":"page"},{"location":"spectralgenerators.html","page":"Spectral Generators","title":"Spectral Generators","text":"led_spec","category":"page"},{"location":"spectralgenerators.html#SpectralVis.led_spec","page":"Spectral Generators","title":"SpectralVis.led_spec","text":"led_spec(λmin, λmax, Δλ, λ0, Δλ1_2)\n\nLED spectrum simulation\n\nλ0: peak wavelength\nΔλ1_2: half spectral width, width at 50% peak intensity\n\nResult: LSpec\n\nSource: Yoshi Ohno (2004), Simulation Analysis of White LED Spectra and Color Rendering,         Proceedings for CIE Expert Sumposium on LED Light Sources, Tokyo, JA (Accessed May 27, 2021) \n\n\n\n\n\n","category":"function"},{"location":"spectralgenerators.html#CIE-Daylight-Illuminants","page":"Spectral Generators","title":"CIE Daylight Illuminants","text":"","category":"section"},{"location":"spectralgenerators.html","page":"Spectral Generators","title":"Spectral Generators","text":"D_series_generator","category":"page"},{"location":"spectralgenerators.html#SpectralVis.D_series_generator","page":"Spectral Generators","title":"SpectralVis.D_series_generator","text":"D_series_generator(T::Real)\n\nThe relative spectral power distribution SPD(λ) of a D series illuminant at CCT T, from 300 to 830 nm in 5 nm steps. By definition the output spectra are normalized in a way that their luminance is always 100.0 at a wavelength of 560 nm.\n\nAllowed CCT range: 4000 K ≤ CCT ≤ 25000 K\n\n\n\n\n\n","category":"function"},{"location":"spectralgenerators.html","page":"Spectral Generators","title":"Spectral Generators","text":"D_series_whitepoint","category":"page"},{"location":"spectralgenerators.html#SpectralVis.D_series_whitepoint","page":"Spectral Generators","title":"SpectralVis.D_series_whitepoint","text":"D_series_whitepoint(env::SpecEnv,T::Real)\n\nproduces the white point according to the CIE Daylight Series.\n\nresult: ::XYZ\n\n\n\n\n\nD_series_whitepoint(T::Real)\n\nproduces the white point according to the CIE Daylight Series.\n\nresult: ::XYZ\n\n\n\n\n\n","category":"function"},{"location":"spectralgenerators.html","page":"Spectral Generators","title":"Spectral Generators","text":"D_series_illuminant","category":"page"},{"location":"spectralgenerators.html#SpectralVis.D_series_illuminant","page":"Spectral Generators","title":"SpectralVis.D_series_illuminant","text":"D_series_illuminant(env::SpecEnv, T::Real)\n\nproduces CIE Daylight spectrum according to desired CCT.\n\nresult: ::LSpec\n\n\n\n\n\nD_series_illuminant(T::Real)\n\nproduces CIE Daylight spectrum according to desired CCT.\n\nresult: ::LSpec\n\n\n\n\n\n","category":"function"},{"location":"spectralgenerators.html#Daylight-illuminant-convenience-functions","page":"Spectral Generators","title":"Daylight illuminant convenience functions","text":"","category":"section"},{"location":"spectralgenerators.html","page":"Spectral Generators","title":"Spectral Generators","text":"D50_illuminant","category":"page"},{"location":"spectralgenerators.html#SpectralVis.D50_illuminant","page":"Spectral Generators","title":"SpectralVis.D50_illuminant","text":"D50_illuminant()\n\nResult: ::LSpec of D50 illuminant, with a CCT of  5003 K\n\n\n\n\n\n","category":"function"},{"location":"spectralgenerators.html","page":"Spectral Generators","title":"Spectral Generators","text":"D55_illuminant","category":"page"},{"location":"spectralgenerators.html#SpectralVis.D55_illuminant","page":"Spectral Generators","title":"SpectralVis.D55_illuminant","text":"D55_illuminant()\n\nResult: ::LSpec of D55 illuminant, with a CCT of  5503 K\n\n\n\n\n\n","category":"function"},{"location":"spectralgenerators.html","page":"Spectral Generators","title":"Spectral Generators","text":"D65_illuminant","category":"page"},{"location":"spectralgenerators.html#SpectralVis.D65_illuminant","page":"Spectral Generators","title":"SpectralVis.D65_illuminant","text":"D65_illuminant()\n\nResult: ::LSpec of D55 illuminant, with a CCT of  6504 K\n\n\n\n\n\n","category":"function"},{"location":"spectralgenerators.html","page":"Spectral Generators","title":"Spectral Generators","text":"D75_illuminant","category":"page"},{"location":"spectralgenerators.html#SpectralVis.D75_illuminant","page":"Spectral Generators","title":"SpectralVis.D75_illuminant","text":"D75_illuminant()\n\nResult: ::LSpec of D75 illuminant, with a CCT of 7504 K\n\n\n\n\n\n","category":"function"},{"location":"spectralgenerators.html","page":"Spectral Generators","title":"Spectral Generators","text":"D93_illuminant","category":"page"},{"location":"spectralgenerators.html#SpectralVis.D93_illuminant","page":"Spectral Generators","title":"SpectralVis.D93_illuminant","text":"D93_illuminant()\n\nResult: ::LSpec of D93 illuminant, with a CCT of 9304 K\n\n\n\n\n\n","category":"function"},{"location":"spectralgenerators.html","page":"Spectral Generators","title":"Spectral Generators","text":"D_series_proper_illuminant","category":"page"},{"location":"spectralgenerators.html","page":"Spectral Generators","title":"Spectral Generators","text":"normalized_D_series","category":"page"},{"location":"spectralgenerators.html#SpectralVis.normalized_D_series","page":"Spectral Generators","title":"SpectralVis.normalized_D_series","text":"normalized_D_series(env::SpecEnv = SPECENV, T::Real)\n\nproduces CIE Daylight spectrum according to desired CCT, normalized to l=100 at λ=560 nm.\n\nExamples\n\njulia> normalized_D_series(SPECENV, 6500)\nLSpec(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[0.5460212796545921, 0.5650827295052294, 0.590288902296674, 0.620011293254124, 0.6526213976027774, 0.6864907105678326, 0.7200645866061678, 0.7520838171013811, 0.7813630526687508, 0.8067169439235554  …  0.578028743266789, 0.5810475635333059, 0.5837744258575818, 0.5863553092107371, 0.5889361925638924, 0.5916338590939442, 0.5944483088008923, 0.5973503458905127, 0.6003107745685814, 0.6033003990408742])\n\nnormalized_D_series(9300)\nLSpec(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[0.9296442162075731, 0.9527892027932645, 0.9854018656135435, 1.0248615127313507, 1.0685474522096268, 1.1138389921113123, 1.158318458802078, 1.2003802518585145, 1.2386217891599418, 1.2716404885856807  …  0.4869584146523383, 0.4894740470571454, 0.4917569270423351, 0.4939234308177161, 0.4960899345930971, 0.49834953933632503, 0.5007022450474, 0.5031247764843602, 0.5055938584052438, 0.5080862155680892])\n\n\n\n\n\n","category":"function"},{"location":"spectralgenerators.html#CIE-Illuminant-Type-A","page":"Spectral Generators","title":"CIE Illuminant Type A","text":"","category":"section"},{"location":"spectralgenerators.html","page":"Spectral Generators","title":"Spectral Generators","text":"illuminant_A","category":"page"},{"location":"spectralgenerators.html#SpectralVis.illuminant_A","page":"Spectral Generators","title":"SpectralVis.illuminant_A","text":"illuminant_A(env::SpecEnv = SPECENV)\n\nProduces the spectrum of illuminant A, which represents tungsten-filament lighting, depending on the limits defined by SPECENV. The relative spectral power distribution is equal to a Planckian spectrum at T ≊ 2856 K, which is also its CCT.\n\nCCT according to the International Practical Temperature Scale from 1968.\n\nThis is the illuminant that should always be used when incandescent lighting is involved.\n\nExample\n\njulia> illuminant_A()\nLSpec(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[1.0161486323473047e11, 1.0369227145593657e11, 1.05797774054285e11, 1.0793148447599527e11, 1.1009351284197664e11, 1.1228396592637178e11, 1.1450294713618913e11, 1.1675055649202544e11, 1.1902689060987242e11, 1.2133204268399858e11  …  2.17270715240179e12, 2.1757420157602646e12, 2.178757889232851e12, 2.1817547874185107e12, 2.1847327254181292e12, 2.1876917188295703e12, 2.190631783742765e12, 2.1935529367348203e12, 2.196455194865146e12, 2.199338575670583e12])\n\n\n\n\n\n","category":"function"},{"location":"spectralgenerators.html#CIE-Illuminant-Type-B","page":"Spectral Generators","title":"CIE Illuminant Type B","text":"","category":"section"},{"location":"spectralgenerators.html","page":"Spectral Generators","title":"Spectral Generators","text":"illuminant_B","category":"page"},{"location":"spectralgenerators.html#SpectralVis.illuminant_B","page":"Spectral Generators","title":"SpectralVis.illuminant_B","text":"illuminant_B(env::SpecEnv = SPECENV)\n\nProduces the spectrum of CIE Standard Illuminant B, with a CCT of ≈4874 K. Originally intended to represent sunlight. Now obsolete, but according to Hunt the European brewing industry still uses an approximation of this illuminant.\n\nExample\n\njulia> illuminant_B()\nLSpec(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[0.313, 0.3223587343061588, 0.3319703445293299, 0.3417825875994216, 0.3517432204463422, 0.3618, 0.3719111024629742, 0.38207638112852754, 0.3923061085625939, 0.4026105573311068  …  7.557164594645486e-6, 9.446455743306857e-6, 7.557164594645484e-6, 3.778582297322749e-6, 1.734723475976807e-20, -2.267149378393646e-6, -3.0228658378581947e-6, -2.6450076081259192e-6, -1.5114329189290965e-6, -2.168404344971009e-21])\n\n\n\n\n\n","category":"function"},{"location":"spectralgenerators.html#CIE-Illuminant-Type-C","page":"Spectral Generators","title":"CIE Illuminant Type C","text":"","category":"section"},{"location":"spectralgenerators.html","page":"Spectral Generators","title":"Spectral Generators","text":"illuminant_C","category":"page"},{"location":"spectralgenerators.html#SpectralVis.illuminant_C","page":"Spectral Generators","title":"SpectralVis.illuminant_C","text":"illuminant_C(env::SpecEnv)\n\nProduces the spectrum of CIE Standard Illuminant C, with a CCT of ≈ 6774 K. Originally intended to represent average daylight.\n\nExample\n\njulia> illuminant_C()\nLSpec(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[0.474, 0.489271743700384, 0.5046749637120697, 0.5202123118735634, 0.5358864400233714, 0.5517, 0.5676560269088902, 0.583759088923221, 0.6000141374831071, 0.616426124028662  …  0.7121636730114121, 0.7159995912642652, 0.7194836730114121, 0.722791836505706, 0.7261, 0.7295488980965763, 0.7331385307954352, 0.7368337144460056, 0.7405992653977175, 0.7444])\n\nHow the CIE Standard Illuminant C is produced:\n\nStandard Source A is combined with a filter made of two 1 cm thick layers, containing two solutions, C₁ and C₂. The solutions are contained in a double cell that is made of a colorless optical glass.\n\nSolution C₁:\n\n3.412 g copper sulphate (CuSO_45H_2O)\n3.412 g mannite [C_6H_8(OH)_6]\n30.0 ml pyridine (C_5H_5N)\n1000.0 ml distilled water\n\nSolution C₂:\n\n30.58 g cobalt ammonium sulphate [CoSO_4(NH_4)_2SO_46H_2O]\n22.52 g copper sulphate (CuSO_45H_2O)\n10.0 ml sulphuric acid (density 1.835 g/ml)\n1000.0 ml distilled water\n\n\n\n\n\n","category":"function"},{"location":"spectralgenerators.html#F-Series-Illuminants","page":"Spectral Generators","title":"F Series Illuminants","text":"","category":"section"},{"location":"spectralgenerators.html","page":"Spectral Generators","title":"Spectral Generators","text":"F_series_illuminant","category":"page"},{"location":"spectralgenerators.html#SpectralVis.F_series_illuminant","page":"Spectral Generators","title":"SpectralVis.F_series_illuminant","text":"F_series_illuminant(type::Symbol)\n\nSpectral power distribution of representative fluorescent lamps from 380 to 780 nm in 5 nm steps.\n\nAvailable types:\n\n:f1 ... :f12\n\nF2, F7, and F11 should be preferred over the other distributions as long as the choice in each of these three groups is not important or critical. The three recommendend illuminants are also marked in the CRI lists below.\n\nFor wavelength outside the 380 nm ... 780 nm range the SPDs should be set to zero.\n\nResult: ::LSpec\n\nThese are not CIE Standard Illuminants. They were compiled by the CIE as a representative collection of practical fluorescent lamps. The 12 lamps in this collection can be grouped in 3 groups:\n\nnormal:       two semi-broad band emmisions of antimony and manganese activations in calcium halo-phosphate phosphor.\n\nCRI table \n\nF1: 76\nF2: 64\nF3: 57\nF4: 51\nF5: 72\nF6: 59\n\nbroad-band:   enhanced color rendering properties in comparison to the normal group, mostly by using multiple phosphors. Flatter spectral distributions with a wider spectral range.\n\nCRI table\n\nF7: 90\nF8: 95\nF9: 90\n\nthree-band:   three narrow-band emissions in the red, green, and blue spectral regions. The narrow-band emissions are produced by ternary compositions of rare-earth phosphors.\n\nCRI table\n\nF10: 81\nF11: 83\nF12: 83\n\nExamples\n\njulia> F_series_illuminant(:f11)\nLSpec(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[0.46, 0.442, 0.424, 0.406, 0.388, 0.37, 0.554, 0.738, 0.922, 1.1059999999999999  …  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])\n\njulia> F_series_illuminant(:f0)\nERROR: DomainError with f0:\nF-series illuminant type does not exist.\n\n\n\n\n\nF_series_illuminant(n::Int)\n\nReturn F series illuminant Fn for n from 1 to 12.\n\nExamples\n\njulia> F_series_illuminant(1)\nLSpec(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[2.94, 3.046, 3.152, 3.258, 3.3640000000000003, 3.47, 3.81, 4.15, 4.49, 4.83  …  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])\n\njulia> F_series_illuminant(13)\nERROR: DomainError with 13:\nF series illuminant outside the range 1 ≤ n ≤ 12.\n\n\n\n\n\n","category":"function"},{"location":"spectralgenerators.html#Gas-Discharge-Illuminant-Spectra","page":"Spectral Generators","title":"Gas Discharge Illuminant Spectra","text":"","category":"section"},{"location":"spectralgenerators.html","page":"Spectral Generators","title":"Spectral Generators","text":"gas_discharge_illuminant","category":"page"},{"location":"spectralgenerators.html#SpectralVis.gas_discharge_illuminant","page":"Spectral Generators","title":"SpectralVis.gas_discharge_illuminant","text":"gas_discharge_illuminant(type::Symbol)\n\nSPDs of common gas discharge lamps.\n\navailable types:\n\n:lps:   Low pressure sodium\n:hps:   High pressure sodium\n:mb:    High pressure mercury\n:mbf:   High pressure mercury with red-emitting phosphor coating, better CRI than MB\n:mbtf:  High pressure mercury with red-emitting phopsphor coating and tungsten filament ballast, better CRI\n:hmi:   High pressure mercury with metal halides. Medium arc, iodides, typical stadium lighting, was used in television to supplement daylight\n:xenon: Xenon, used in film projectors in cinemas, floodlighting, in lighthouses, for accelerated fading tests, flash photography, lighting fluorescent materials\n\nExample\n\njulia> gas_discharge_illuminant(:lps)\nLSpec(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[0.0, 0.02, 0.04, 0.06, 0.08, 0.1, 0.08, 0.060000000000000005, 0.04000000000000001, 0.020000000000000004  …  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])\n\njulia> gas_discharge_illuminant(:xenon)\nLSpec(Real[390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0  …  821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0], Real[96.33, 97.176, 98.022, 98.868, 99.714, 100.56, 101.01, 101.46000000000001, 101.91, 102.36  …  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])\n\n\n\n\n\ngas_discharge_illuminant(n::Int)\n\nReturns gas discharge type illuminant of index n for n from 1 to 7.\n\nResult: ::LSpec\n\n\n\n\n\n","category":"function"},{"location":"spectralgenerators.html#Blackbody-Illuminant-Spectra","page":"Spectral Generators","title":"Blackbody Illuminant Spectra","text":"","category":"section"},{"location":"spectralgenerators.html","page":"Spectral Generators","title":"Spectral Generators","text":"blackbody_illuminant","category":"page"},{"location":"spectralgenerators.html#SpectralVis.blackbody_illuminant","page":"Spectral Generators","title":"SpectralVis.blackbody_illuminant","text":"blackbody_illuminant(env::SpecEnv,T::Real)\n\nproduces blackbody spectrum according to desired blackbody temperature in K.\n\nExamples\n\n\n\n\n\n\n\n","category":"function"},{"location":"spectralgenerators.html","page":"Spectral Generators","title":"Spectral Generators","text":"blackbody_whitepoint","category":"page"},{"location":"spectralgenerators.html#SpectralVis.blackbody_whitepoint","page":"Spectral Generators","title":"SpectralVis.blackbody_whitepoint","text":"blackbody_whitepoint(env::SpecEnv, T::Real)\n\nproduces the white point according to desired blackbody temperature in K.\n\nExamples\n\n\n\n\n\n\n\n","category":"function"},{"location":"spectralgenerators.html#Sinusoidal-Spectra","page":"Spectral Generators","title":"Sinusoidal Spectra","text":"","category":"section"},{"location":"spectralgenerators.html","page":"Spectral Generators","title":"Spectral Generators","text":"sinusoidal_spd","category":"page"},{"location":"spectralgenerators.html#SpectralVis.sinusoidal_spd","page":"Spectral Generators","title":"SpectralVis.sinusoidal_spd","text":"sinusoidal_spd(freq::Real, modfac::Real = 1.0, ampl::Real = 1.0, phase::Real, r = (SPECENV.λmin:SPECENV.Δλ:SPECENV.λmax))\n\nGenerates a sinusoidal spectral power distribution. Useful for computational gamut and spectral calculations.\n\n\n\n\n\n","category":"function"},{"location":"spectraldata.html#Spectral-Data","page":"Spectral Data","title":"Spectral Data","text":"","category":"section"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"SpectralVis comes with a large variety of spectral datasets.","category":"page"},{"location":"spectraldata.html#Agfa-IT8-target","page":"Spectral Data","title":"Agfa IT8 target","text":"","category":"section"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"agfait_specs()","category":"page"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"agfait_specs","category":"page"},{"location":"spectraldata.html#SpectralVis.agfait_specs","page":"Spectral Data","title":"SpectralVis.agfait_specs","text":"agfait_specs()\n\n\n\n\n\n","category":"function"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"agfait(idx::Int)","category":"page"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"agfait","category":"page"},{"location":"spectraldata.html#SpectralVis.agfait","page":"Spectral Data","title":"SpectralVis.agfait","text":"agfait(idx::Int)\n\nReturns the reflectance spectrum of the selected Agfait872 color patch. Spectral data are from 400 to 700 nm in 10 nm steps.\n\n1st group: 1-264\n\n2nd group: Neutral scale samples (265-286)\n\n3rd group:\n\nblack sample (287)\nwhite sample (288)\nMinolta white calibration sample (289)\n\nExamples\n\njulia> agfait(123)\nRSpec(Real[400.0, 410.0, 420.0, 430.0, 440.0, 450.0, 460.0, 470.0, 480.0, 490.0  …  610.0, 620.0, 630.0, 640.0, 650.0, 660.0, 670.0, 680.0, 690.0, 700.0], Real[0.1282, 0.3004, 0.4806, 0.5796, 0.6429, 0.6818000000000001, 0.7078, 0.7159, 0.7071999999999999, 0.6896  …  0.259, 0.2318, 0.21309999999999998, 0.2, 0.1932, 0.19210000000000002, 0.19699999999999998, 0.2095, 0.2311, 0.2594])\n\njulia> agfait(0)\nERROR: DomainError with 0:\nColor index out of range. Expecting 0 ≤ index ≤ 289.\n\nMeasurer: ela@ee.oulu.fi (University of Oulu, Electrical Eng.Dept)\n\n\n\n\n\n","category":"function"},{"location":"spectraldata.html#Munsell-matte-spectra","page":"Spectral Data","title":"Munsell matte spectra","text":"","category":"section"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"munsell_specs()","category":"page"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"munsell_specs","category":"page"},{"location":"spectraldata.html#SpectralVis.munsell_specs","page":"Spectral Data","title":"SpectralVis.munsell_specs","text":"munsell_specs()\n\nReturns an array containing all 1269 munsell spectra, measured from 380 to 800 nm in 1 nm steps.\n\n\n\n\n\n","category":"function"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"munsell_spec(idx::Int, speclist)","category":"page"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"munsell_spec","category":"page"},{"location":"spectraldata.html#SpectralVis.munsell_spec","page":"Spectral Data","title":"SpectralVis.munsell_spec","text":"munsell_spec(idx::Int, speclist)\n\nReturns reflectance spectrum of the Munsell dataset at index idx. Possible indices go from 1 to 1269\n\nExample\n\njulia> munsell_spec(437, speclist)\nRSpec(Real[380, 381, 382, 383, 384, 385, 386, 387, 388, 389  …  791, 792, 793, 794, 795, 796, 797, 798, 799, 800], Real[0.1184, 0.1208, 0.124, 0.1301, 0.1349, 0.1431, 0.1498, 0.1579, 0.1631, 0.1731  …  0.3355, 0.3364, 0.3345, 0.3337, 0.3327, 0.3348, 0.3392, 0.3377, 0.335, 0.3351])\n\n\n\n\n\n","category":"function"},{"location":"spectraldata.html#MacBeth-color-chart","page":"Spectral Data","title":"MacBeth color chart","text":"","category":"section"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"macbeth(colorchart::Symbol, color::Symbol)","category":"page"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"macbeth","category":"page"},{"location":"spectraldata.html#SpectralVis.macbeth","page":"Spectral Data","title":"SpectralVis.macbeth","text":"macbeth(colorchart::Symbol,color::Symbol)\n\nreturns RSpec of one of the 24 MacBeth color patches of a given name.\n\navailable color charts:\n\n:Macbeth_chart1, λ=380:10:730 nm, average of multiple measured charts from BabelColor\n\n:Macbeth_chart2, λ=380:4:780 nm\n\n:Macbeth_chart3, λ=380:5:780 nm\n\navailable color names:\n\n:darkskin, :lightskin, :bluesky, :foliage, :blueflower, :bluishgreen,\n\n:orange, :purplishblue, :moderatered, :purple, :yellowgreen, :orangeyellow,\n\n:blue, :green, :red, :yellow, :magenta, :cyan,\n\n:white95, :neutral8, :neutral65, :neutral5, :neutral35, :black2\n\n\n\n\n\nmacbeth(colorchart::Symbol,num::Int)\n\nreturns RSpec of one of the 24 MacBeth color patches of a given number.\n\navailable color charts:\n\n:Macbeth_chart1, λ=380:10:730 nm, average of multiple measured charts from BabelColor\n\n:Macbeth_chart2, λ=380:4:780 nm\n\n:Macbeth_chart3, λ=380:5:780 nm\n\navailable color patch numbers: 1 to 24\n\n\n\n\n\n","category":"function"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"mbspec(colorchart::Symbol, name::Symbol)","category":"page"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"mbspec","category":"page"},{"location":"spectraldata.html#SpectralVis.mbspec","page":"Spectral Data","title":"SpectralVis.mbspec","text":"mbspec(colorchart::Symbol,name::Symbol)\n\nreturns RSpec adapted to SPECENV limits for λ.\n\n\n\n\n\nmbspec(colorchart::Symbol, num::Int)\n\nreturns RSpec adapted to th 390:830 nm range of the standard CMF\n\n\n\n\n\n","category":"function"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"mbcolor(spec::RSpec, illum::LSpec)","category":"page"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"mbcolor","category":"page"},{"location":"spectraldata.html#SpectralVis.mbcolor","page":"Spectral Data","title":"SpectralVis.mbcolor","text":"mbcolor(spec::RSpec,illum::LSpec)\n\nreturns XYZ color according to illuminant\n\n\n\n\n\n","category":"function"},{"location":"spectraldata.html#Mars-Exploration-Rover-Calibration-Target-(MER-CalTarget)","page":"Spectral Data","title":"Mars Exploration Rover Calibration Target (MER CalTarget)","text":"","category":"section"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"mer_caltarget(color::Symbol)","category":"page"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"mer_caltarget","category":"page"},{"location":"spectraldata.html#SpectralVis.mer_caltarget","page":"Spectral Data","title":"SpectralVis.mer_caltarget","text":"mer_caltarget(color::Symbol)\n\nReturns the spectrum of a given MER Caltarget color patch.\n\nAllowed color patch names:\n\n:white, :grey, :black, :yellow, :red, :green, :blue\n\nResult: RSpec\n\n\n\n\n\nmer_caltarget(color::Int)\n\nReturns the spectrum of a given MER Caltarget color patch.\n\nAllowed color patch indices: 1 ≤ color ≤ 7.\n\nResult: RSpec\n\n\n\n\n\n","category":"function"},{"location":"spectraldata.html#Mars-Exploration-Rover-Panoramic-Camera-filters","page":"Spectral Data","title":"Mars Exploration Rover Panoramic Camera filters","text":"","category":"section"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"pancam(filter::Symbol)","category":"page"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"pancam","category":"page"},{"location":"spectraldata.html#MER-Opportunity-measurement-of-the-Martian-Sky","page":"Spectral Data","title":"MER Opportunity measurement of the Martian Sky","text":"","category":"section"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"mars_sky_opportunity()","category":"page"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"mars_sky_opportunity","category":"page"},{"location":"spectraldata.html#Kodak-Wratten-Filters","page":"Spectral Data","title":"Kodak Wratten Filters","text":"","category":"section"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"wratten(f::Symbol)","category":"page"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"wratten","category":"page"},{"location":"spectraldata.html#SpectralVis.wratten","page":"Spectral Data","title":"SpectralVis.wratten","text":"wratten(f::Int)\n\nReturns `TSpec` of one of the Wratten filters of a given index `f` in the range `0 < f < 128`.\n\nExamples\n\njulia> wratten(77)\nTSpec(Real[400.0, 410.0, 420.0, 430.0, 440.0, 450.0, 460.0, 470.0, 480.0, 490.0  …  610.0,\n 620.0, 630.0, 640.0, 650.0, 660.0, 670.0, 680.0, 690.0, 700.0], Real[0.6409999999999999,\n  0.665, 0.684, 0.695, 0.7, 0.6940000000000001, 0.675, 0.654, 0.629, 0.598  …  0.4, 0.376,\n   0.355, 0.342, 0.336, 0.34, 0.341, 0.345, 0.348, 0.36], 1.0)\n\n\n\n\n\nwratten(f::Symbol)\n\nReturns TSpec of one of the Wratten filters of a given name f.\n\nExamples\n\njulia> wratten(:n44)\nTSpec(Real[400.0, 410.0, 420.0, 430.0, 440.0, 450.0, 460.0, 470.0, 480.0, 490.0  …  610.0, \n620.0, 630.0, 640.0, 650.0, 660.0, 670.0, 680.0, 690.0, 700.0], Real[0.0044, 0.0036, 0.0063,\n 0.0363, 0.131, 0.254, 0.365, 0.465, 0.536, 0.568…  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n  0.0018, 0.016], 1.0)\n\n\n\n\n\n","category":"function"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"wratten_filter(f::Int, x::Real)","category":"page"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"wratten_filter","category":"page"},{"location":"spectraldata.html#SpectralVis.wratten_filter","page":"Spectral Data","title":"SpectralVis.wratten_filter","text":"wratten_filter(f::Int, x::Real)\n\nReturns TSpec of one of the Wratten filters of a given name adapted to SPECENV settings. x is relative to unit thickness.\n\n\n\n\n\n\n\nwratten_filter(f::Int)\n\nreturns TSpec of one of the Wratten filters at unit thickness.\n\n\n\n\n\nwratten_filter(f::Symbol)\n\nreturns TSpec of one of the Wratten filters of a given name adapted to SPECENV settings.\n\n\n\n\n\nwratten_filter(f::Symbol)\n\nreturns TSpec of one of the Wratten filters of a given name at unit thickness x = 1.0\n\n\n\n\n\n","category":"function"},{"location":"spectraldata.html#Vantablack","page":"Spectral Data","title":"Vantablack®","text":"","category":"section"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"vantablack()","category":"page"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"vantablack","category":"page"},{"location":"spectraldata.html#Mineral-spectra","page":"Spectral Data","title":"Mineral spectra","text":"","category":"section"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"mineral_specs(mineral::Symbol)","category":"page"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"mineral_specs","category":"page"},{"location":"spectraldata.html#SpectralVis.mineral_specs","page":"Spectral Data","title":"SpectralVis.mineral_specs","text":"mineral_specs(mineral::Symbol)\n\nReads and returns the spectral data of a chosen mineral.\n\nAvailable mineral types:\n\n:augite\n:goethite\n:hematite\n:pigeonite\n\n\n\n\n\n","category":"function"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"mineral(mineral::Symbol, spectable = mineral_specs(mineral))","category":"page"},{"location":"spectraldata.html","page":"Spectral Data","title":"Spectral Data","text":"mineral","category":"page"},{"location":"spectraldata.html#SpectralVis.mineral","page":"Spectral Data","title":"SpectralVis.mineral","text":"mineral(mineral::Symbol, spectable = mineral_specs(mineral))\n\nReturns reflectance spectrum of chosen mineral.\n\nAllowed names for mineral: :augite, :goethite, :hematite, :pigeonite\n\n\n\n\n\n","category":"function"},{"location":"index.html#Introduction","page":"Index","title":"Introduction","text":"","category":"section"},{"location":"index.html","page":"Index","title":"Index","text":"SpectralVis provides a comprehensive set of functions dealing with spectra, human vision based on spectral data, etc.","category":"page"},{"location":"index.html#Package-Features","page":"Index","title":"Package Features","text":"","category":"section"},{"location":"index.html","page":"Index","title":"Index","text":"Spectral Operators\nSpectral Types\nFundamental Metamers\nSpectral Environment\nColor Matching Functions\nCone Fundamentals\nSpectral Based Simulation of color deficiency","category":"page"},{"location":"index.html#Installation","page":"Index","title":"Installation","text":"","category":"section"},{"location":"index.html","page":"Index","title":"Index","text":"This package can be installed with the Julia package manager. In the Julia REPL, type ] to enter the Pkg REPL mode and run the following command:","category":"page"},{"location":"index.html","page":"Index","title":"Index","text":"pkg> add SpectralVis","category":"page"},{"location":"index.html#Reexport","page":"Index","title":"Reexport","text":"","category":"section"},{"location":"index.html","page":"Index","title":"Index","text":"Please note that SpectralVis uses other packages, like Colors and SSpline","category":"page"},{"location":"index.html","page":"Index","title":"Index","text":"","category":"page"}]
}
